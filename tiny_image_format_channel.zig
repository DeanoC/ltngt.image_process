// Do Not Edit Autogenerated by tiny_image_format_generator

const TinyImageFormat = @import("tiny_image_format.zig").Format;
const PhysicalChannel = @import("tiny_image_format.zig").PhysicalChannel;
const LogicalChannel = @import("tiny_image_format.zig").LogicalChannel;

pub fn ChannelCount(fmt: TinyImageFormat) u8 {
    switch(fmt) {
        .UNDEFINED => return 1,
        .R1_UNORM => return 1,
        .R2_UNORM => return 1,
        .R4_UNORM => return 1,
        .R4G4_UNORM => return 2,
        .G4R4_UNORM => return 2,
        .A8_UNORM => return 1,
        .R8_UNORM => return 1,
        .R8_SNORM => return 1,
        .R8_UINT => return 1,
        .R8_SINT => return 1,
        .R8_SRGB => return 1,
        .B2G3R3_UNORM => return 3,
        .R4G4B4A4_UNORM => return 4,
        .R4G4B4X4_UNORM => return 4,
        .B4G4R4A4_UNORM => return 4,
        .B4G4R4X4_UNORM => return 4,
        .A4R4G4B4_UNORM => return 4,
        .X4R4G4B4_UNORM => return 4,
        .A4B4G4R4_UNORM => return 4,
        .X4B4G4R4_UNORM => return 4,
        .R5G6B5_UNORM => return 3,
        .B5G6R5_UNORM => return 3,
        .R5G5B5A1_UNORM => return 4,
        .B5G5R5A1_UNORM => return 4,
        .A1R5G5B5_UNORM => return 4,
        .A1B5G5R5_UNORM => return 4,
        .R5G5B5X1_UNORM => return 4,
        .B5G5R5X1_UNORM => return 4,
        .X1R5G5B5_UNORM => return 4,
        .X1B5G5R5_UNORM => return 4,
        .B2G3R3A8_UNORM => return 4,
        .R8G8_UNORM => return 2,
        .R8G8_SNORM => return 2,
        .G8R8_UNORM => return 2,
        .G8R8_SNORM => return 2,
        .R8G8_UINT => return 2,
        .R8G8_SINT => return 2,
        .R8G8_SRGB => return 2,
        .R16_UNORM => return 1,
        .R16_SNORM => return 1,
        .R16_UINT => return 1,
        .R16_SINT => return 1,
        .R16_SFLOAT => return 1,
        .R16_SBFLOAT => return 1,
        .R8G8B8_UNORM => return 3,
        .R8G8B8_SNORM => return 3,
        .R8G8B8_UINT => return 3,
        .R8G8B8_SINT => return 3,
        .R8G8B8_SRGB => return 3,
        .B8G8R8_UNORM => return 3,
        .B8G8R8_SNORM => return 3,
        .B8G8R8_UINT => return 3,
        .B8G8R8_SINT => return 3,
        .B8G8R8_SRGB => return 3,
        .R8G8B8A8_UNORM => return 4,
        .R8G8B8A8_SNORM => return 4,
        .R8G8B8A8_UINT => return 4,
        .R8G8B8A8_SINT => return 4,
        .R8G8B8A8_SRGB => return 4,
        .B8G8R8A8_UNORM => return 4,
        .B8G8R8A8_SNORM => return 4,
        .B8G8R8A8_UINT => return 4,
        .B8G8R8A8_SINT => return 4,
        .B8G8R8A8_SRGB => return 4,
        .R8G8B8X8_UNORM => return 4,
        .B8G8R8X8_UNORM => return 4,
        .R16G16_UNORM => return 2,
        .G16R16_UNORM => return 2,
        .R16G16_SNORM => return 2,
        .G16R16_SNORM => return 2,
        .R16G16_UINT => return 2,
        .R16G16_SINT => return 2,
        .R16G16_SFLOAT => return 2,
        .R16G16_SBFLOAT => return 2,
        .R32_UINT => return 1,
        .R32_SINT => return 1,
        .R32_SFLOAT => return 1,
        .A2R10G10B10_UNORM => return 4,
        .A2R10G10B10_SNORM => return 4,
        .A2R10G10B10_UINT => return 4,
        .A2R10G10B10_SINT => return 4,
        .A2B10G10R10_UNORM => return 4,
        .A2B10G10R10_SNORM => return 4,
        .A2B10G10R10_UINT => return 4,
        .A2B10G10R10_SINT => return 4,
        .R10G10B10A2_UNORM => return 4,
        .R10G10B10A2_SNORM => return 4,
        .R10G10B10A2_UINT => return 4,
        .R10G10B10A2_SINT => return 4,
        .B10G10R10A2_UNORM => return 4,
        .B10G10R10A2_SNORM => return 4,
        .B10G10R10A2_UINT => return 4,
        .B10G10R10A2_SINT => return 4,
        .B10G11R11_UFLOAT => return 3,
        .E5_UINT_B9G9R9_UFLOAT => return 4,
        .R16G16B16_UNORM => return 3,
        .R16G16B16_SNORM => return 3,
        .R16G16B16_UINT => return 3,
        .R16G16B16_SINT => return 3,
        .R16G16B16_SFLOAT => return 3,
        .R16G16B16_SBFLOAT => return 3,
        .R16G16B16A16_UNORM => return 4,
        .R16G16B16A16_SNORM => return 4,
        .R16G16B16A16_UINT => return 4,
        .R16G16B16A16_SINT => return 4,
        .R16G16B16A16_SFLOAT => return 4,
        .R16G16B16A16_SBFLOAT => return 4,
        .R32G32_UINT => return 2,
        .R32G32_SINT => return 2,
        .R32G32_SFLOAT => return 2,
        .R64_UINT => return 1,
        .R64_SINT => return 1,
        .R64_SFLOAT => return 1,
        .R32G32B32_UINT => return 3,
        .R32G32B32_SINT => return 3,
        .R32G32B32_SFLOAT => return 3,
        .R32G32B32A32_UINT => return 4,
        .R32G32B32A32_SINT => return 4,
        .R32G32B32A32_SFLOAT => return 4,
        .R64G64_UINT => return 2,
        .R64G64_SINT => return 2,
        .R64G64_SFLOAT => return 2,
        .R64G64B64_UINT => return 3,
        .R64G64B64_SINT => return 3,
        .R64G64B64_SFLOAT => return 3,
        .R64G64B64A64_UINT => return 4,
        .R64G64B64A64_SINT => return 4,
        .R64G64B64A64_SFLOAT => return 4,
        .D16_UNORM => return 1,
        .X8_D24_UNORM => return 2,
        .D32_SFLOAT => return 1,
        .S8_UINT => return 1,
        .D16_UNORM_S8_UINT => return 2,
        .D24_UNORM_S8_UINT => return 2,
        .D32_SFLOAT_S8_UINT => return 2,
        .DXBC1_RGB_UNORM => return 3,
        .DXBC1_RGB_SRGB => return 3,
        .DXBC1_RGBA_UNORM => return 4,
        .DXBC1_RGBA_SRGB => return 4,
        .DXBC2_UNORM => return 4,
        .DXBC2_SRGB => return 4,
        .DXBC3_UNORM => return 4,
        .DXBC3_SRGB => return 4,
        .DXBC4_UNORM => return 1,
        .DXBC4_SNORM => return 1,
        .DXBC5_UNORM => return 2,
        .DXBC5_SNORM => return 2,
        .DXBC6H_UFLOAT => return 3,
        .DXBC6H_SFLOAT => return 3,
        .DXBC7_UNORM => return 4,
        .DXBC7_SRGB => return 4,
        .PVRTC1_2BPP_UNORM => return 4,
        .PVRTC1_4BPP_UNORM => return 4,
        .PVRTC2_2BPP_UNORM => return 4,
        .PVRTC2_4BPP_UNORM => return 4,
        .PVRTC1_2BPP_SRGB => return 4,
        .PVRTC1_4BPP_SRGB => return 4,
        .PVRTC2_2BPP_SRGB => return 4,
        .PVRTC2_4BPP_SRGB => return 4,
        .ETC2_R8G8B8_UNORM => return 3,
        .ETC2_R8G8B8_SRGB => return 3,
        .ETC2_R8G8B8A1_UNORM => return 4,
        .ETC2_R8G8B8A1_SRGB => return 4,
        .ETC2_R8G8B8A8_UNORM => return 4,
        .ETC2_R8G8B8A8_SRGB => return 4,
        .ETC2_EAC_R11_UNORM => return 1,
        .ETC2_EAC_R11_SNORM => return 1,
        .ETC2_EAC_R11G11_UNORM => return 2,
        .ETC2_EAC_R11G11_SNORM => return 2,
        .ASTC_4x4_UNORM => return 4,
        .ASTC_4x4_SRGB => return 4,
        .ASTC_5x4_UNORM => return 4,
        .ASTC_5x4_SRGB => return 4,
        .ASTC_5x5_UNORM => return 4,
        .ASTC_5x5_SRGB => return 4,
        .ASTC_6x5_UNORM => return 4,
        .ASTC_6x5_SRGB => return 4,
        .ASTC_6x6_UNORM => return 4,
        .ASTC_6x6_SRGB => return 4,
        .ASTC_8x5_UNORM => return 4,
        .ASTC_8x5_SRGB => return 4,
        .ASTC_8x8_UNORM => return 4,
        .ASTC_8x8_SRGB => return 4,
        .ASTC_10x5_UNORM => return 4,
        .ASTC_10x5_SRGB => return 4,
        .ASTC_10x6_UNORM => return 4,
        .ASTC_10x6_SRGB => return 4,
        .ASTC_10x8_UNORM => return 4,
        .ASTC_10x8_SRGB => return 4,
        .ASTC_10x10_UNORM => return 4,
        .ASTC_10x10_SRGB => return 4,
        .ASTC_12x10_UNORM => return 4,
        .ASTC_12x10_SRGB => return 4,
        .ASTC_12x12_UNORM => return 4,
        .ASTC_12x12_SRGB => return 4,
        .CLUT_P4 => return 1,
        .CLUT_P4A4 => return 2,
        .CLUT_P8 => return 1,
        .CLUT_P8A8 => return 2,
        else => return 0,
    }
}

pub fn ChannelBitWidthAtPhysicalChannel(fmt: TinyImageFormat, channel: u8) u8 {
    if(channel == 0) {
         switch(fmt) {
            .R1_UNORM => return 1,
            .R2_UNORM => return 2,
            .R4_UNORM => return 4,
            .R4G4_UNORM => return 4,
            .G4R4_UNORM => return 4,
            .A8_UNORM => return 8,
            .R8_UNORM => return 8,
            .R8_SNORM => return 8,
            .R8_UINT => return 8,
            .R8_SINT => return 8,
            .R8_SRGB => return 8,
            .B2G3R3_UNORM => return 2,
            .R4G4B4A4_UNORM => return 4,
            .R4G4B4X4_UNORM => return 4,
            .B4G4R4A4_UNORM => return 4,
            .B4G4R4X4_UNORM => return 4,
            .A4R4G4B4_UNORM => return 4,
            .X4R4G4B4_UNORM => return 4,
            .A4B4G4R4_UNORM => return 4,
            .X4B4G4R4_UNORM => return 4,
            .R5G6B5_UNORM => return 5,
            .B5G6R5_UNORM => return 5,
            .R5G5B5A1_UNORM => return 5,
            .B5G5R5A1_UNORM => return 5,
            .A1R5G5B5_UNORM => return 1,
            .A1B5G5R5_UNORM => return 1,
            .R5G5B5X1_UNORM => return 5,
            .B5G5R5X1_UNORM => return 5,
            .X1R5G5B5_UNORM => return 1,
            .X1B5G5R5_UNORM => return 1,
            .B2G3R3A8_UNORM => return 2,
            .R8G8_UNORM => return 8,
            .R8G8_SNORM => return 8,
            .G8R8_UNORM => return 8,
            .G8R8_SNORM => return 8,
            .R8G8_UINT => return 8,
            .R8G8_SINT => return 8,
            .R8G8_SRGB => return 8,
            .R16_UNORM => return 16,
            .R16_SNORM => return 16,
            .R16_UINT => return 16,
            .R16_SINT => return 16,
            .R16_SFLOAT => return 16,
            .R16_SBFLOAT => return 16,
            .R8G8B8_UNORM => return 8,
            .R8G8B8_SNORM => return 8,
            .R8G8B8_UINT => return 8,
            .R8G8B8_SINT => return 8,
            .R8G8B8_SRGB => return 8,
            .B8G8R8_UNORM => return 8,
            .B8G8R8_SNORM => return 8,
            .B8G8R8_UINT => return 8,
            .B8G8R8_SINT => return 8,
            .B8G8R8_SRGB => return 8,
            .R8G8B8A8_UNORM => return 8,
            .R8G8B8A8_SNORM => return 8,
            .R8G8B8A8_UINT => return 8,
            .R8G8B8A8_SINT => return 8,
            .R8G8B8A8_SRGB => return 8,
            .B8G8R8A8_UNORM => return 8,
            .B8G8R8A8_SNORM => return 8,
            .B8G8R8A8_UINT => return 8,
            .B8G8R8A8_SINT => return 8,
            .B8G8R8A8_SRGB => return 8,
            .R8G8B8X8_UNORM => return 8,
            .B8G8R8X8_UNORM => return 8,
            .R16G16_UNORM => return 16,
            .G16R16_UNORM => return 16,
            .R16G16_SNORM => return 16,
            .G16R16_SNORM => return 16,
            .R16G16_UINT => return 16,
            .R16G16_SINT => return 16,
            .R16G16_SFLOAT => return 16,
            .R16G16_SBFLOAT => return 16,
            .R32_UINT => return 32,
            .R32_SINT => return 32,
            .R32_SFLOAT => return 32,
            .A2R10G10B10_UNORM => return 2,
            .A2R10G10B10_SNORM => return 2,
            .A2R10G10B10_UINT => return 2,
            .A2R10G10B10_SINT => return 2,
            .A2B10G10R10_UNORM => return 2,
            .A2B10G10R10_SNORM => return 2,
            .A2B10G10R10_UINT => return 2,
            .A2B10G10R10_SINT => return 2,
            .R10G10B10A2_UNORM => return 10,
            .R10G10B10A2_SNORM => return 10,
            .R10G10B10A2_UINT => return 10,
            .R10G10B10A2_SINT => return 10,
            .B10G10R10A2_UNORM => return 10,
            .B10G10R10A2_SNORM => return 10,
            .B10G10R10A2_UINT => return 10,
            .B10G10R10A2_SINT => return 10,
            .B10G11R11_UFLOAT => return 10,
            .E5_UINT_B9G9R9_UFLOAT => return 5,
            .R16G16B16_UNORM => return 16,
            .R16G16B16_SNORM => return 16,
            .R16G16B16_UINT => return 16,
            .R16G16B16_SINT => return 16,
            .R16G16B16_SFLOAT => return 16,
            .R16G16B16_SBFLOAT => return 16,
            .R16G16B16A16_UNORM => return 16,
            .R16G16B16A16_SNORM => return 16,
            .R16G16B16A16_UINT => return 16,
            .R16G16B16A16_SINT => return 16,
            .R16G16B16A16_SFLOAT => return 16,
            .R16G16B16A16_SBFLOAT => return 16,
            .R32G32_UINT => return 32,
            .R32G32_SINT => return 32,
            .R32G32_SFLOAT => return 32,
            .R64_UINT => return 64,
            .R64_SINT => return 64,
            .R64_SFLOAT => return 64,
            .R32G32B32_UINT => return 32,
            .R32G32B32_SINT => return 32,
            .R32G32B32_SFLOAT => return 32,
            .R32G32B32A32_UINT => return 32,
            .R32G32B32A32_SINT => return 32,
            .R32G32B32A32_SFLOAT => return 32,
            .R64G64_UINT => return 64,
            .R64G64_SINT => return 64,
            .R64G64_SFLOAT => return 64,
            .R64G64B64_UINT => return 64,
            .R64G64B64_SINT => return 64,
            .R64G64B64_SFLOAT => return 64,
            .R64G64B64A64_UINT => return 64,
            .R64G64B64A64_SINT => return 64,
            .R64G64B64A64_SFLOAT => return 64,
            .D16_UNORM => return 16,
            .X8_D24_UNORM => return 8,
            .D32_SFLOAT => return 32,
            .S8_UINT => return 8,
            .D16_UNORM_S8_UINT => return 16,
            .D24_UNORM_S8_UINT => return 24,
            .D32_SFLOAT_S8_UINT => return 32,
            .DXBC1_RGB_UNORM => return 5,
            .DXBC1_RGB_SRGB => return 5,
            .DXBC1_RGBA_UNORM => return 5,
            .DXBC1_RGBA_SRGB => return 5,
            .DXBC2_UNORM => return 5,
            .DXBC2_SRGB => return 5,
            .DXBC3_UNORM => return 5,
            .DXBC3_SRGB => return 5,
            .DXBC4_UNORM => return 8,
            .DXBC4_SNORM => return 8,
            .DXBC5_UNORM => return 8,
            .DXBC5_SNORM => return 8,
            .DXBC6H_UFLOAT => return 9,
            .DXBC6H_SFLOAT => return 9,
            .DXBC7_UNORM => return 8,
            .DXBC7_SRGB => return 8,
            .PVRTC1_2BPP_UNORM => return 5,
            .PVRTC1_4BPP_UNORM => return 5,
            .PVRTC2_2BPP_UNORM => return 5,
            .PVRTC2_4BPP_UNORM => return 5,
            .PVRTC1_2BPP_SRGB => return 5,
            .PVRTC1_4BPP_SRGB => return 5,
            .PVRTC2_2BPP_SRGB => return 5,
            .PVRTC2_4BPP_SRGB => return 5,
            .ETC2_R8G8B8_UNORM => return 5,
            .ETC2_R8G8B8_SRGB => return 5,
            .ETC2_R8G8B8A1_UNORM => return 5,
            .ETC2_R8G8B8A1_SRGB => return 5,
            .ETC2_R8G8B8A8_UNORM => return 5,
            .ETC2_R8G8B8A8_SRGB => return 5,
            .ETC2_EAC_R11_UNORM => return 11,
            .ETC2_EAC_R11_SNORM => return 11,
            .ETC2_EAC_R11G11_UNORM => return 11,
            .ETC2_EAC_R11G11_SNORM => return 11,
            .ASTC_4x4_UNORM => return 8,
            .ASTC_4x4_SRGB => return 8,
            .ASTC_5x4_UNORM => return 8,
            .ASTC_5x4_SRGB => return 8,
            .ASTC_5x5_UNORM => return 8,
            .ASTC_5x5_SRGB => return 8,
            .ASTC_6x5_UNORM => return 8,
            .ASTC_6x5_SRGB => return 8,
            .ASTC_6x6_UNORM => return 8,
            .ASTC_6x6_SRGB => return 8,
            .ASTC_8x5_UNORM => return 8,
            .ASTC_8x5_SRGB => return 8,
            .ASTC_8x8_UNORM => return 8,
            .ASTC_8x8_SRGB => return 8,
            .ASTC_10x5_UNORM => return 8,
            .ASTC_10x5_SRGB => return 8,
            .ASTC_10x6_UNORM => return 8,
            .ASTC_10x6_SRGB => return 8,
            .ASTC_10x8_UNORM => return 8,
            .ASTC_10x8_SRGB => return 8,
            .ASTC_10x10_UNORM => return 8,
            .ASTC_10x10_SRGB => return 8,
            .ASTC_12x10_UNORM => return 8,
            .ASTC_12x10_SRGB => return 8,
            .ASTC_12x12_UNORM => return 8,
            .ASTC_12x12_SRGB => return 8,
            .CLUT_P4 => return 4,
            .CLUT_P4A4 => return 4,
            .CLUT_P8 => return 8,
            .CLUT_P8A8 => return 8,
         else => return 0,
        }
    }
    else if(channel == 1) {
         switch(fmt) {
            .R4G4_UNORM => return 4,
            .G4R4_UNORM => return 4,
            .B2G3R3_UNORM => return 3,
            .R4G4B4A4_UNORM => return 4,
            .R4G4B4X4_UNORM => return 4,
            .B4G4R4A4_UNORM => return 4,
            .B4G4R4X4_UNORM => return 4,
            .A4R4G4B4_UNORM => return 4,
            .X4R4G4B4_UNORM => return 4,
            .A4B4G4R4_UNORM => return 4,
            .X4B4G4R4_UNORM => return 4,
            .R5G6B5_UNORM => return 6,
            .B5G6R5_UNORM => return 6,
            .R5G5B5A1_UNORM => return 5,
            .B5G5R5A1_UNORM => return 5,
            .A1R5G5B5_UNORM => return 5,
            .A1B5G5R5_UNORM => return 5,
            .R5G5B5X1_UNORM => return 5,
            .B5G5R5X1_UNORM => return 5,
            .X1R5G5B5_UNORM => return 5,
            .X1B5G5R5_UNORM => return 5,
            .B2G3R3A8_UNORM => return 3,
            .R8G8_UNORM => return 8,
            .R8G8_SNORM => return 8,
            .G8R8_UNORM => return 8,
            .G8R8_SNORM => return 8,
            .R8G8_UINT => return 8,
            .R8G8_SINT => return 8,
            .R8G8_SRGB => return 8,
            .R8G8B8_UNORM => return 8,
            .R8G8B8_SNORM => return 8,
            .R8G8B8_UINT => return 8,
            .R8G8B8_SINT => return 8,
            .R8G8B8_SRGB => return 8,
            .B8G8R8_UNORM => return 8,
            .B8G8R8_SNORM => return 8,
            .B8G8R8_UINT => return 8,
            .B8G8R8_SINT => return 8,
            .B8G8R8_SRGB => return 8,
            .R8G8B8A8_UNORM => return 8,
            .R8G8B8A8_SNORM => return 8,
            .R8G8B8A8_UINT => return 8,
            .R8G8B8A8_SINT => return 8,
            .R8G8B8A8_SRGB => return 8,
            .B8G8R8A8_UNORM => return 8,
            .B8G8R8A8_SNORM => return 8,
            .B8G8R8A8_UINT => return 8,
            .B8G8R8A8_SINT => return 8,
            .B8G8R8A8_SRGB => return 8,
            .R8G8B8X8_UNORM => return 8,
            .B8G8R8X8_UNORM => return 8,
            .R16G16_UNORM => return 16,
            .G16R16_UNORM => return 16,
            .R16G16_SNORM => return 16,
            .G16R16_SNORM => return 16,
            .R16G16_UINT => return 16,
            .R16G16_SINT => return 16,
            .R16G16_SFLOAT => return 16,
            .R16G16_SBFLOAT => return 16,
            .A2R10G10B10_UNORM => return 10,
            .A2R10G10B10_SNORM => return 10,
            .A2R10G10B10_UINT => return 10,
            .A2R10G10B10_SINT => return 10,
            .A2B10G10R10_UNORM => return 10,
            .A2B10G10R10_SNORM => return 10,
            .A2B10G10R10_UINT => return 10,
            .A2B10G10R10_SINT => return 10,
            .R10G10B10A2_UNORM => return 10,
            .R10G10B10A2_SNORM => return 10,
            .R10G10B10A2_UINT => return 10,
            .R10G10B10A2_SINT => return 10,
            .B10G10R10A2_UNORM => return 10,
            .B10G10R10A2_SNORM => return 10,
            .B10G10R10A2_UINT => return 10,
            .B10G10R10A2_SINT => return 10,
            .B10G11R11_UFLOAT => return 11,
            .E5_UINT_B9G9R9_UFLOAT => return 9,
            .R16G16B16_UNORM => return 16,
            .R16G16B16_SNORM => return 16,
            .R16G16B16_UINT => return 16,
            .R16G16B16_SINT => return 16,
            .R16G16B16_SFLOAT => return 16,
            .R16G16B16_SBFLOAT => return 16,
            .R16G16B16A16_UNORM => return 16,
            .R16G16B16A16_SNORM => return 16,
            .R16G16B16A16_UINT => return 16,
            .R16G16B16A16_SINT => return 16,
            .R16G16B16A16_SFLOAT => return 16,
            .R16G16B16A16_SBFLOAT => return 16,
            .R32G32_UINT => return 32,
            .R32G32_SINT => return 32,
            .R32G32_SFLOAT => return 32,
            .R32G32B32_UINT => return 32,
            .R32G32B32_SINT => return 32,
            .R32G32B32_SFLOAT => return 32,
            .R32G32B32A32_UINT => return 32,
            .R32G32B32A32_SINT => return 32,
            .R32G32B32A32_SFLOAT => return 32,
            .R64G64_UINT => return 64,
            .R64G64_SINT => return 64,
            .R64G64_SFLOAT => return 64,
            .R64G64B64_UINT => return 64,
            .R64G64B64_SINT => return 64,
            .R64G64B64_SFLOAT => return 64,
            .R64G64B64A64_UINT => return 64,
            .R64G64B64A64_SINT => return 64,
            .R64G64B64A64_SFLOAT => return 64,
            .X8_D24_UNORM => return 24,
            .D16_UNORM_S8_UINT => return 8,
            .D24_UNORM_S8_UINT => return 8,
            .D32_SFLOAT_S8_UINT => return 8,
            .DXBC1_RGB_UNORM => return 6,
            .DXBC1_RGB_SRGB => return 6,
            .DXBC1_RGBA_UNORM => return 6,
            .DXBC1_RGBA_SRGB => return 6,
            .DXBC2_UNORM => return 6,
            .DXBC2_SRGB => return 6,
            .DXBC3_UNORM => return 6,
            .DXBC3_SRGB => return 6,
            .DXBC4_UNORM => return 8,
            .DXBC4_SNORM => return 8,
            .DXBC5_UNORM => return 8,
            .DXBC5_SNORM => return 8,
            .DXBC6H_UFLOAT => return 9,
            .DXBC6H_SFLOAT => return 9,
            .DXBC7_UNORM => return 8,
            .DXBC7_SRGB => return 8,
            .PVRTC1_2BPP_UNORM => return 5,
            .PVRTC1_4BPP_UNORM => return 5,
            .PVRTC2_2BPP_UNORM => return 5,
            .PVRTC2_4BPP_UNORM => return 5,
            .PVRTC1_2BPP_SRGB => return 5,
            .PVRTC1_4BPP_SRGB => return 5,
            .PVRTC2_2BPP_SRGB => return 5,
            .PVRTC2_4BPP_SRGB => return 5,
            .ETC2_R8G8B8_UNORM => return 5,
            .ETC2_R8G8B8_SRGB => return 5,
            .ETC2_R8G8B8A1_UNORM => return 5,
            .ETC2_R8G8B8A1_SRGB => return 5,
            .ETC2_R8G8B8A8_UNORM => return 5,
            .ETC2_R8G8B8A8_SRGB => return 5,
            .ETC2_EAC_R11_UNORM => return 11,
            .ETC2_EAC_R11_SNORM => return 11,
            .ETC2_EAC_R11G11_UNORM => return 11,
            .ETC2_EAC_R11G11_SNORM => return 11,
            .ASTC_4x4_UNORM => return 8,
            .ASTC_4x4_SRGB => return 8,
            .ASTC_5x4_UNORM => return 8,
            .ASTC_5x4_SRGB => return 8,
            .ASTC_5x5_UNORM => return 8,
            .ASTC_5x5_SRGB => return 8,
            .ASTC_6x5_UNORM => return 8,
            .ASTC_6x5_SRGB => return 8,
            .ASTC_6x6_UNORM => return 8,
            .ASTC_6x6_SRGB => return 8,
            .ASTC_8x5_UNORM => return 8,
            .ASTC_8x5_SRGB => return 8,
            .ASTC_8x8_UNORM => return 8,
            .ASTC_8x8_SRGB => return 8,
            .ASTC_10x5_UNORM => return 8,
            .ASTC_10x5_SRGB => return 8,
            .ASTC_10x6_UNORM => return 8,
            .ASTC_10x6_SRGB => return 8,
            .ASTC_10x8_UNORM => return 8,
            .ASTC_10x8_SRGB => return 8,
            .ASTC_10x10_UNORM => return 8,
            .ASTC_10x10_SRGB => return 8,
            .ASTC_12x10_UNORM => return 8,
            .ASTC_12x10_SRGB => return 8,
            .ASTC_12x12_UNORM => return 8,
            .ASTC_12x12_SRGB => return 8,
            .CLUT_P4A4 => return 4,
            .CLUT_P8A8 => return 8,
         else => return 0,
        }
    }
    else if(channel == 2) {
         switch(fmt) {
            .B2G3R3_UNORM => return 3,
            .R4G4B4A4_UNORM => return 4,
            .R4G4B4X4_UNORM => return 4,
            .B4G4R4A4_UNORM => return 4,
            .B4G4R4X4_UNORM => return 4,
            .A4R4G4B4_UNORM => return 4,
            .X4R4G4B4_UNORM => return 4,
            .A4B4G4R4_UNORM => return 4,
            .X4B4G4R4_UNORM => return 4,
            .R5G6B5_UNORM => return 5,
            .B5G6R5_UNORM => return 5,
            .R5G5B5A1_UNORM => return 5,
            .B5G5R5A1_UNORM => return 5,
            .A1R5G5B5_UNORM => return 5,
            .A1B5G5R5_UNORM => return 5,
            .R5G5B5X1_UNORM => return 5,
            .B5G5R5X1_UNORM => return 5,
            .X1R5G5B5_UNORM => return 5,
            .X1B5G5R5_UNORM => return 5,
            .B2G3R3A8_UNORM => return 2,
            .R8G8B8_UNORM => return 8,
            .R8G8B8_SNORM => return 8,
            .R8G8B8_UINT => return 8,
            .R8G8B8_SINT => return 8,
            .R8G8B8_SRGB => return 8,
            .B8G8R8_UNORM => return 8,
            .B8G8R8_SNORM => return 8,
            .B8G8R8_UINT => return 8,
            .B8G8R8_SINT => return 8,
            .B8G8R8_SRGB => return 8,
            .R8G8B8A8_UNORM => return 8,
            .R8G8B8A8_SNORM => return 8,
            .R8G8B8A8_UINT => return 8,
            .R8G8B8A8_SINT => return 8,
            .R8G8B8A8_SRGB => return 8,
            .B8G8R8A8_UNORM => return 8,
            .B8G8R8A8_SNORM => return 8,
            .B8G8R8A8_UINT => return 8,
            .B8G8R8A8_SINT => return 8,
            .B8G8R8A8_SRGB => return 8,
            .R8G8B8X8_UNORM => return 8,
            .B8G8R8X8_UNORM => return 8,
            .A2R10G10B10_UNORM => return 10,
            .A2R10G10B10_SNORM => return 10,
            .A2R10G10B10_UINT => return 10,
            .A2R10G10B10_SINT => return 10,
            .A2B10G10R10_UNORM => return 10,
            .A2B10G10R10_SNORM => return 10,
            .A2B10G10R10_UINT => return 10,
            .A2B10G10R10_SINT => return 10,
            .R10G10B10A2_UNORM => return 10,
            .R10G10B10A2_SNORM => return 10,
            .R10G10B10A2_UINT => return 10,
            .R10G10B10A2_SINT => return 10,
            .B10G10R10A2_UNORM => return 10,
            .B10G10R10A2_SNORM => return 10,
            .B10G10R10A2_UINT => return 10,
            .B10G10R10A2_SINT => return 10,
            .B10G11R11_UFLOAT => return 11,
            .E5_UINT_B9G9R9_UFLOAT => return 9,
            .R16G16B16_UNORM => return 16,
            .R16G16B16_SNORM => return 16,
            .R16G16B16_UINT => return 16,
            .R16G16B16_SINT => return 16,
            .R16G16B16_SFLOAT => return 16,
            .R16G16B16_SBFLOAT => return 16,
            .R16G16B16A16_UNORM => return 16,
            .R16G16B16A16_SNORM => return 16,
            .R16G16B16A16_UINT => return 16,
            .R16G16B16A16_SINT => return 16,
            .R16G16B16A16_SFLOAT => return 16,
            .R16G16B16A16_SBFLOAT => return 16,
            .R32G32B32_UINT => return 32,
            .R32G32B32_SINT => return 32,
            .R32G32B32_SFLOAT => return 32,
            .R32G32B32A32_UINT => return 32,
            .R32G32B32A32_SINT => return 32,
            .R32G32B32A32_SFLOAT => return 32,
            .R64G64B64_UINT => return 64,
            .R64G64B64_SINT => return 64,
            .R64G64B64_SFLOAT => return 64,
            .R64G64B64A64_UINT => return 64,
            .R64G64B64A64_SINT => return 64,
            .R64G64B64A64_SFLOAT => return 64,
            .DXBC1_RGB_UNORM => return 5,
            .DXBC1_RGB_SRGB => return 5,
            .DXBC1_RGBA_UNORM => return 5,
            .DXBC1_RGBA_SRGB => return 5,
            .DXBC2_UNORM => return 5,
            .DXBC2_SRGB => return 5,
            .DXBC3_UNORM => return 5,
            .DXBC3_SRGB => return 5,
            .DXBC4_UNORM => return 8,
            .DXBC4_SNORM => return 8,
            .DXBC5_UNORM => return 8,
            .DXBC5_SNORM => return 8,
            .DXBC6H_UFLOAT => return 9,
            .DXBC6H_SFLOAT => return 9,
            .DXBC7_UNORM => return 8,
            .DXBC7_SRGB => return 8,
            .PVRTC1_2BPP_UNORM => return 5,
            .PVRTC1_4BPP_UNORM => return 5,
            .PVRTC2_2BPP_UNORM => return 5,
            .PVRTC2_4BPP_UNORM => return 5,
            .PVRTC1_2BPP_SRGB => return 5,
            .PVRTC1_4BPP_SRGB => return 5,
            .PVRTC2_2BPP_SRGB => return 5,
            .PVRTC2_4BPP_SRGB => return 5,
            .ETC2_R8G8B8_UNORM => return 5,
            .ETC2_R8G8B8_SRGB => return 5,
            .ETC2_R8G8B8A1_UNORM => return 5,
            .ETC2_R8G8B8A1_SRGB => return 5,
            .ETC2_R8G8B8A8_UNORM => return 5,
            .ETC2_R8G8B8A8_SRGB => return 5,
            .ASTC_4x4_UNORM => return 8,
            .ASTC_4x4_SRGB => return 8,
            .ASTC_5x4_UNORM => return 8,
            .ASTC_5x4_SRGB => return 8,
            .ASTC_5x5_UNORM => return 8,
            .ASTC_5x5_SRGB => return 8,
            .ASTC_6x5_UNORM => return 8,
            .ASTC_6x5_SRGB => return 8,
            .ASTC_6x6_UNORM => return 8,
            .ASTC_6x6_SRGB => return 8,
            .ASTC_8x5_UNORM => return 8,
            .ASTC_8x5_SRGB => return 8,
            .ASTC_8x8_UNORM => return 8,
            .ASTC_8x8_SRGB => return 8,
            .ASTC_10x5_UNORM => return 8,
            .ASTC_10x5_SRGB => return 8,
            .ASTC_10x6_UNORM => return 8,
            .ASTC_10x6_SRGB => return 8,
            .ASTC_10x8_UNORM => return 8,
            .ASTC_10x8_SRGB => return 8,
            .ASTC_10x10_UNORM => return 8,
            .ASTC_10x10_SRGB => return 8,
            .ASTC_12x10_UNORM => return 8,
            .ASTC_12x10_SRGB => return 8,
            .ASTC_12x12_UNORM => return 8,
            .ASTC_12x12_SRGB => return 8,
         else => return 0,
        }
    }
    else if(channel == 3) {
         switch(fmt) {
            .R4G4B4A4_UNORM => return 4,
            .R4G4B4X4_UNORM => return 4,
            .B4G4R4A4_UNORM => return 4,
            .B4G4R4X4_UNORM => return 4,
            .A4R4G4B4_UNORM => return 4,
            .X4R4G4B4_UNORM => return 4,
            .A4B4G4R4_UNORM => return 4,
            .X4B4G4R4_UNORM => return 4,
            .R5G5B5A1_UNORM => return 1,
            .B5G5R5A1_UNORM => return 1,
            .A1R5G5B5_UNORM => return 5,
            .A1B5G5R5_UNORM => return 5,
            .R5G5B5X1_UNORM => return 1,
            .B5G5R5X1_UNORM => return 1,
            .X1R5G5B5_UNORM => return 5,
            .X1B5G5R5_UNORM => return 5,
            .B2G3R3A8_UNORM => return 8,
            .R8G8B8A8_UNORM => return 8,
            .R8G8B8A8_SNORM => return 8,
            .R8G8B8A8_UINT => return 8,
            .R8G8B8A8_SINT => return 8,
            .R8G8B8A8_SRGB => return 8,
            .B8G8R8A8_UNORM => return 8,
            .B8G8R8A8_SNORM => return 8,
            .B8G8R8A8_UINT => return 8,
            .B8G8R8A8_SINT => return 8,
            .B8G8R8A8_SRGB => return 8,
            .R8G8B8X8_UNORM => return 8,
            .B8G8R8X8_UNORM => return 8,
            .A2R10G10B10_UNORM => return 10,
            .A2R10G10B10_SNORM => return 10,
            .A2R10G10B10_UINT => return 10,
            .A2R10G10B10_SINT => return 10,
            .A2B10G10R10_UNORM => return 10,
            .A2B10G10R10_SNORM => return 10,
            .A2B10G10R10_UINT => return 10,
            .A2B10G10R10_SINT => return 10,
            .R10G10B10A2_UNORM => return 2,
            .R10G10B10A2_SNORM => return 2,
            .R10G10B10A2_UINT => return 2,
            .R10G10B10A2_SINT => return 2,
            .B10G10R10A2_UNORM => return 2,
            .B10G10R10A2_SNORM => return 2,
            .B10G10R10A2_UINT => return 2,
            .B10G10R10A2_SINT => return 2,
            .E5_UINT_B9G9R9_UFLOAT => return 9,
            .R16G16B16A16_UNORM => return 16,
            .R16G16B16A16_SNORM => return 16,
            .R16G16B16A16_UINT => return 16,
            .R16G16B16A16_SINT => return 16,
            .R16G16B16A16_SFLOAT => return 16,
            .R16G16B16A16_SBFLOAT => return 16,
            .R32G32B32A32_UINT => return 32,
            .R32G32B32A32_SINT => return 32,
            .R32G32B32A32_SFLOAT => return 32,
            .R64G64B64A64_UINT => return 64,
            .R64G64B64A64_SINT => return 64,
            .R64G64B64A64_SFLOAT => return 64,
            .DXBC1_RGBA_UNORM => return 1,
            .DXBC1_RGBA_SRGB => return 1,
            .DXBC2_UNORM => return 8,
            .DXBC2_SRGB => return 8,
            .DXBC3_UNORM => return 4,
            .DXBC3_SRGB => return 4,
            .DXBC4_UNORM => return 8,
            .DXBC4_SNORM => return 8,
            .DXBC5_UNORM => return 8,
            .DXBC5_SNORM => return 8,
            .DXBC7_UNORM => return 8,
            .DXBC7_SRGB => return 8,
            .PVRTC1_2BPP_UNORM => return 5,
            .PVRTC1_4BPP_UNORM => return 5,
            .PVRTC2_2BPP_UNORM => return 5,
            .PVRTC2_4BPP_UNORM => return 5,
            .PVRTC1_2BPP_SRGB => return 5,
            .PVRTC1_4BPP_SRGB => return 5,
            .PVRTC2_2BPP_SRGB => return 5,
            .PVRTC2_4BPP_SRGB => return 5,
            .ETC2_R8G8B8A1_UNORM => return 1,
            .ETC2_R8G8B8A1_SRGB => return 1,
            .ETC2_R8G8B8A8_UNORM => return 3,
            .ETC2_R8G8B8A8_SRGB => return 3,
            .ASTC_4x4_UNORM => return 8,
            .ASTC_4x4_SRGB => return 8,
            .ASTC_5x4_UNORM => return 8,
            .ASTC_5x4_SRGB => return 8,
            .ASTC_5x5_UNORM => return 8,
            .ASTC_5x5_SRGB => return 8,
            .ASTC_6x5_UNORM => return 8,
            .ASTC_6x5_SRGB => return 8,
            .ASTC_6x6_UNORM => return 8,
            .ASTC_6x6_SRGB => return 8,
            .ASTC_8x5_UNORM => return 8,
            .ASTC_8x5_SRGB => return 8,
            .ASTC_8x8_UNORM => return 8,
            .ASTC_8x8_SRGB => return 8,
            .ASTC_10x5_UNORM => return 8,
            .ASTC_10x5_SRGB => return 8,
            .ASTC_10x6_UNORM => return 8,
            .ASTC_10x6_SRGB => return 8,
            .ASTC_10x8_UNORM => return 8,
            .ASTC_10x8_SRGB => return 8,
            .ASTC_10x10_UNORM => return 8,
            .ASTC_10x10_SRGB => return 8,
            .ASTC_12x10_UNORM => return 8,
            .ASTC_12x10_SRGB => return 8,
            .ASTC_12x12_UNORM => return 8,
            .ASTC_12x12_SRGB => return 8,
         else => return 0,
        }
    }
    return 0;

}

pub fn MinimumAtPhysicalChannel(fmt: TinyImageFormat, channel: u8) f64 {
    if(channel == 0) {
         switch(fmt) {
            .R8_SNORM => return -1.0,
            .R8_SINT => return -128.0,
            .R8G8_SNORM => return -1.0,
            .G8R8_SNORM => return -1.0,
            .R8G8_SINT => return -128.0,
            .R16_SNORM => return -1.0,
            .R16_SINT => return -32768.0,
            .R16_SFLOAT => return -65504.0,
            .R16_SBFLOAT => return -3.4028234663852886E38,
            .R8G8B8_SNORM => return -1.0,
            .R8G8B8_SINT => return -128.0,
            .B8G8R8_SNORM => return -1.0,
            .B8G8R8_SINT => return -128.0,
            .R8G8B8A8_SNORM => return -1.0,
            .R8G8B8A8_SINT => return -128.0,
            .B8G8R8A8_SNORM => return -1.0,
            .B8G8R8A8_SINT => return -128.0,
            .R16G16_SNORM => return -1.0,
            .G16R16_SNORM => return -1.0,
            .R16G16_SINT => return -32768.0,
            .R16G16_SFLOAT => return -65504.0,
            .R16G16_SBFLOAT => return -3.4028234663852886E38,
            .R32_SINT => return -2.147483648E9,
            .R32_SFLOAT => return -3.4028234663852886E38,
            .A2R10G10B10_SNORM => return -1.0,
            .A2R10G10B10_SINT => return -2.0,
            .A2B10G10R10_SNORM => return -1.0,
            .A2B10G10R10_SINT => return -2.0,
            .R10G10B10A2_SNORM => return -1.0,
            .R10G10B10A2_SINT => return -512.0,
            .B10G10R10A2_SNORM => return -1.0,
            .B10G10R10A2_SINT => return -512.0,
            .R16G16B16_SNORM => return -1.0,
            .R16G16B16_SINT => return -32768.0,
            .R16G16B16_SFLOAT => return -65504.0,
            .R16G16B16_SBFLOAT => return -3.4028234663852886E38,
            .R16G16B16A16_SNORM => return -1.0,
            .R16G16B16A16_SINT => return -32768.0,
            .R16G16B16A16_SFLOAT => return -65504.0,
            .R16G16B16A16_SBFLOAT => return -3.4028234663852886E38,
            .R32G32_SINT => return -2.147483648E9,
            .R32G32_SFLOAT => return -3.4028234663852886E38,
            .R64_SINT => return -9.223372036854776E18,
            .R64_SFLOAT => return -1.7976931348623157E308,
            .R32G32B32_SINT => return -2.147483648E9,
            .R32G32B32_SFLOAT => return -3.4028234663852886E38,
            .R32G32B32A32_SINT => return -2.147483648E9,
            .R32G32B32A32_SFLOAT => return -3.4028234663852886E38,
            .R64G64_SINT => return -9.223372036854776E18,
            .R64G64_SFLOAT => return -1.7976931348623157E308,
            .R64G64B64_SINT => return -9.223372036854776E18,
            .R64G64B64_SFLOAT => return -1.7976931348623157E308,
            .R64G64B64A64_SINT => return -9.223372036854776E18,
            .R64G64B64A64_SFLOAT => return -1.7976931348623157E308,
            .D32_SFLOAT => return -3.4028234663852886E38,
            .D32_SFLOAT_S8_UINT => return -3.4028234663852886E38,
            .DXBC4_SNORM => return -1.0,
            .DXBC5_SNORM => return -1.0,
            .DXBC6H_SFLOAT => return -3.4028234663852886E38,
            .ETC2_EAC_R11_SNORM => return -1.0,
            .ETC2_EAC_R11G11_SNORM => return -1.0,
         else => return 0.0,
        }
    }
    else if(channel == 1) {
         switch(fmt) {
            .R8G8_SNORM => return -1.0,
            .G8R8_SNORM => return -1.0,
            .R8G8_SINT => return -128.0,
            .R8G8B8_SNORM => return -1.0,
            .R8G8B8_SINT => return -128.0,
            .B8G8R8_SNORM => return -1.0,
            .B8G8R8_SINT => return -128.0,
            .R8G8B8A8_SNORM => return -1.0,
            .R8G8B8A8_SINT => return -128.0,
            .B8G8R8A8_SNORM => return -1.0,
            .B8G8R8A8_SINT => return -128.0,
            .R16G16_SNORM => return -1.0,
            .G16R16_SNORM => return -1.0,
            .R16G16_SINT => return -32768.0,
            .R16G16_SFLOAT => return -65504.0,
            .R16G16_SBFLOAT => return -3.4028234663852886E38,
            .A2R10G10B10_SNORM => return -1.0,
            .A2R10G10B10_SINT => return -512.0,
            .A2B10G10R10_SNORM => return -1.0,
            .A2B10G10R10_SINT => return -512.0,
            .R10G10B10A2_SNORM => return -1.0,
            .R10G10B10A2_SINT => return -512.0,
            .B10G10R10A2_SNORM => return -1.0,
            .B10G10R10A2_SINT => return -512.0,
            .R16G16B16_SNORM => return -1.0,
            .R16G16B16_SINT => return -32768.0,
            .R16G16B16_SFLOAT => return -65504.0,
            .R16G16B16_SBFLOAT => return -3.4028234663852886E38,
            .R16G16B16A16_SNORM => return -1.0,
            .R16G16B16A16_SINT => return -32768.0,
            .R16G16B16A16_SFLOAT => return -65504.0,
            .R16G16B16A16_SBFLOAT => return -3.4028234663852886E38,
            .R32G32_SINT => return -2.147483648E9,
            .R32G32_SFLOAT => return -3.4028234663852886E38,
            .R32G32B32_SINT => return -2.147483648E9,
            .R32G32B32_SFLOAT => return -3.4028234663852886E38,
            .R32G32B32A32_SINT => return -2.147483648E9,
            .R32G32B32A32_SFLOAT => return -3.4028234663852886E38,
            .R64G64_SINT => return -9.223372036854776E18,
            .R64G64_SFLOAT => return -1.7976931348623157E308,
            .R64G64B64_SINT => return -9.223372036854776E18,
            .R64G64B64_SFLOAT => return -1.7976931348623157E308,
            .R64G64B64A64_SINT => return -9.223372036854776E18,
            .R64G64B64A64_SFLOAT => return -1.7976931348623157E308,
            .DXBC4_SNORM => return -1.0,
            .DXBC5_SNORM => return -1.0,
            .DXBC6H_SFLOAT => return -3.4028234663852886E38,
            .ETC2_EAC_R11_SNORM => return -1.0,
            .ETC2_EAC_R11G11_SNORM => return -1.0,
         else => return 0.0,
        }
    }
    else if(channel == 2) {
         switch(fmt) {
            .R8G8B8_SNORM => return -1.0,
            .R8G8B8_SINT => return -128.0,
            .B8G8R8_SNORM => return -1.0,
            .B8G8R8_SINT => return -128.0,
            .R8G8B8A8_SNORM => return -1.0,
            .R8G8B8A8_SINT => return -128.0,
            .B8G8R8A8_SNORM => return -1.0,
            .B8G8R8A8_SINT => return -128.0,
            .A2R10G10B10_SNORM => return -1.0,
            .A2R10G10B10_SINT => return -512.0,
            .A2B10G10R10_SNORM => return -1.0,
            .A2B10G10R10_SINT => return -512.0,
            .R10G10B10A2_SNORM => return -1.0,
            .R10G10B10A2_SINT => return -512.0,
            .B10G10R10A2_SNORM => return -1.0,
            .B10G10R10A2_SINT => return -512.0,
            .R16G16B16_SNORM => return -1.0,
            .R16G16B16_SINT => return -32768.0,
            .R16G16B16_SFLOAT => return -65504.0,
            .R16G16B16_SBFLOAT => return -3.4028234663852886E38,
            .R16G16B16A16_SNORM => return -1.0,
            .R16G16B16A16_SINT => return -32768.0,
            .R16G16B16A16_SFLOAT => return -65504.0,
            .R16G16B16A16_SBFLOAT => return -3.4028234663852886E38,
            .R32G32B32_SINT => return -2.147483648E9,
            .R32G32B32_SFLOAT => return -3.4028234663852886E38,
            .R32G32B32A32_SINT => return -2.147483648E9,
            .R32G32B32A32_SFLOAT => return -3.4028234663852886E38,
            .R64G64B64_SINT => return -9.223372036854776E18,
            .R64G64B64_SFLOAT => return -1.7976931348623157E308,
            .R64G64B64A64_SINT => return -9.223372036854776E18,
            .R64G64B64A64_SFLOAT => return -1.7976931348623157E308,
            .DXBC4_SNORM => return -1.0,
            .DXBC5_SNORM => return -1.0,
            .DXBC6H_SFLOAT => return -3.4028234663852886E38,
            .ETC2_EAC_R11_SNORM => return -1.0,
            .ETC2_EAC_R11G11_SNORM => return -1.0,
         else => return 0.0,
        }
    }
    else if(channel == 3) {
         switch(fmt) {
            .R8G8B8A8_SNORM => return -1.0,
            .R8G8B8A8_SINT => return -128.0,
            .B8G8R8A8_SNORM => return -1.0,
            .B8G8R8A8_SINT => return -128.0,
            .A2R10G10B10_SNORM => return -1.0,
            .A2R10G10B10_SINT => return -512.0,
            .A2B10G10R10_SNORM => return -1.0,
            .A2B10G10R10_SINT => return -512.0,
            .R10G10B10A2_SNORM => return -1.0,
            .R10G10B10A2_SINT => return -2.0,
            .B10G10R10A2_SNORM => return -1.0,
            .B10G10R10A2_SINT => return -2.0,
            .R16G16B16A16_SNORM => return -1.0,
            .R16G16B16A16_SINT => return -32768.0,
            .R16G16B16A16_SFLOAT => return -65504.0,
            .R16G16B16A16_SBFLOAT => return -3.4028234663852886E38,
            .R32G32B32A32_SINT => return -2.147483648E9,
            .R32G32B32A32_SFLOAT => return -3.4028234663852886E38,
            .R64G64B64A64_SINT => return -9.223372036854776E18,
            .R64G64B64A64_SFLOAT => return -1.7976931348623157E308,
            .DXBC4_SNORM => return -1.0,
            .DXBC5_SNORM => return -1.0,
            .DXBC6H_SFLOAT => return -3.4028234663852886E38,
            .ETC2_EAC_R11_SNORM => return -1.0,
            .ETC2_EAC_R11G11_SNORM => return -1.0,
         else => return 0.0,
        }
    }
    return 0.0;

}

pub fn MaximumAtPhysicalChannel(fmt: TinyImageFormat, channel: u8) f64 {
    if(channel == 0) {
         switch(fmt) {
            .R8_UINT => return 255.0,
            .R8_SINT => return 127.0,
            .R8G8_UINT => return 255.0,
            .R8G8_SINT => return 127.0,
            .R16_UINT => return 65535.0,
            .R16_SINT => return 32767.0,
            .R16_SFLOAT => return 65504.0,
            .R16_SBFLOAT => return 3.4028234663852886E38,
            .R8G8B8_UINT => return 255.0,
            .R8G8B8_SINT => return 127.0,
            .B8G8R8_UINT => return 255.0,
            .B8G8R8_SINT => return 127.0,
            .R8G8B8A8_UINT => return 255.0,
            .R8G8B8A8_SINT => return 127.0,
            .B8G8R8A8_UINT => return 255.0,
            .B8G8R8A8_SINT => return 127.0,
            .R16G16_UINT => return 65535.0,
            .R16G16_SINT => return 32767.0,
            .R16G16_SFLOAT => return 65504.0,
            .R16G16_SBFLOAT => return 3.4028234663852886E38,
            .R32_UINT => return 4.294967295E9,
            .R32_SINT => return 2.147483647E9,
            .R32_SFLOAT => return 3.4028234663852886E38,
            .A2R10G10B10_UINT => return 3.0,
            .A2B10G10R10_UINT => return 3.0,
            .R10G10B10A2_UINT => return 1023.0,
            .R10G10B10A2_SINT => return 511.0,
            .B10G10R10A2_UINT => return 1023.0,
            .B10G10R10A2_SINT => return 511.0,
            .B10G11R11_UFLOAT => return 0.0,
            .E5_UINT_B9G9R9_UFLOAT => return 31.0,
            .R16G16B16_UINT => return 65535.0,
            .R16G16B16_SINT => return 32767.0,
            .R16G16B16_SFLOAT => return 65504.0,
            .R16G16B16_SBFLOAT => return 3.4028234663852886E38,
            .R16G16B16A16_UINT => return 65535.0,
            .R16G16B16A16_SINT => return 32767.0,
            .R16G16B16A16_SFLOAT => return 65504.0,
            .R16G16B16A16_SBFLOAT => return 3.4028234663852886E38,
            .R32G32_UINT => return 4.294967295E9,
            .R32G32_SINT => return 2.147483647E9,
            .R32G32_SFLOAT => return 3.4028234663852886E38,
            .R64_UINT => return 1.8446744073709552E19,
            .R64_SINT => return 9.223372036854776E18,
            .R64_SFLOAT => return 1.7976931348623157E308,
            .R32G32B32_UINT => return 4.294967295E9,
            .R32G32B32_SINT => return 2.147483647E9,
            .R32G32B32_SFLOAT => return 3.4028234663852886E38,
            .R32G32B32A32_UINT => return 4.294967295E9,
            .R32G32B32A32_SINT => return 2.147483647E9,
            .R32G32B32A32_SFLOAT => return 3.4028234663852886E38,
            .R64G64_UINT => return 1.8446744073709552E19,
            .R64G64_SINT => return 9.223372036854776E18,
            .R64G64_SFLOAT => return 1.7976931348623157E308,
            .R64G64B64_UINT => return 1.8446744073709552E19,
            .R64G64B64_SINT => return 9.223372036854776E18,
            .R64G64B64_SFLOAT => return 1.7976931348623157E308,
            .R64G64B64A64_UINT => return 1.8446744073709552E19,
            .R64G64B64A64_SINT => return 9.223372036854776E18,
            .R64G64B64A64_SFLOAT => return 1.7976931348623157E308,
            .X8_D24_UNORM => return 255.0,
            .D32_SFLOAT => return 3.4028234663852886E38,
            .S8_UINT => return 255.0,
            .D32_SFLOAT_S8_UINT => return 3.4028234663852886E38,
            .DXBC6H_UFLOAT => return 3.4028234663852886E38,
            .DXBC6H_SFLOAT => return 3.4028234663852886E38,
         else => return 1.0,
        }
    }
    else if(channel == 1) {
         switch(fmt) {
            .R8G8_UINT => return 255.0,
            .R8G8_SINT => return 127.0,
            .R8G8B8_UINT => return 255.0,
            .R8G8B8_SINT => return 127.0,
            .B8G8R8_UINT => return 255.0,
            .B8G8R8_SINT => return 127.0,
            .R8G8B8A8_UINT => return 255.0,
            .R8G8B8A8_SINT => return 127.0,
            .B8G8R8A8_UINT => return 255.0,
            .B8G8R8A8_SINT => return 127.0,
            .R16G16_UINT => return 65535.0,
            .R16G16_SINT => return 32767.0,
            .R16G16_SFLOAT => return 65504.0,
            .R16G16_SBFLOAT => return 3.4028234663852886E38,
            .A2R10G10B10_UINT => return 1023.0,
            .A2R10G10B10_SINT => return 511.0,
            .A2B10G10R10_UINT => return 1023.0,
            .A2B10G10R10_SINT => return 511.0,
            .R10G10B10A2_UINT => return 1023.0,
            .R10G10B10A2_SINT => return 511.0,
            .B10G10R10A2_UINT => return 1023.0,
            .B10G10R10A2_SINT => return 511.0,
            .B10G11R11_UFLOAT => return 0.0,
            .E5_UINT_B9G9R9_UFLOAT => return 0.0,
            .R16G16B16_UINT => return 65535.0,
            .R16G16B16_SINT => return 32767.0,
            .R16G16B16_SFLOAT => return 65504.0,
            .R16G16B16_SBFLOAT => return 3.4028234663852886E38,
            .R16G16B16A16_UINT => return 65535.0,
            .R16G16B16A16_SINT => return 32767.0,
            .R16G16B16A16_SFLOAT => return 65504.0,
            .R16G16B16A16_SBFLOAT => return 3.4028234663852886E38,
            .R32G32_UINT => return 4.294967295E9,
            .R32G32_SINT => return 2.147483647E9,
            .R32G32_SFLOAT => return 3.4028234663852886E38,
            .R32G32B32_UINT => return 4.294967295E9,
            .R32G32B32_SINT => return 2.147483647E9,
            .R32G32B32_SFLOAT => return 3.4028234663852886E38,
            .R32G32B32A32_UINT => return 4.294967295E9,
            .R32G32B32A32_SINT => return 2.147483647E9,
            .R32G32B32A32_SFLOAT => return 3.4028234663852886E38,
            .R64G64_UINT => return 1.8446744073709552E19,
            .R64G64_SINT => return 9.223372036854776E18,
            .R64G64_SFLOAT => return 1.7976931348623157E308,
            .R64G64B64_UINT => return 1.8446744073709552E19,
            .R64G64B64_SINT => return 9.223372036854776E18,
            .R64G64B64_SFLOAT => return 1.7976931348623157E308,
            .R64G64B64A64_UINT => return 1.8446744073709552E19,
            .R64G64B64A64_SINT => return 9.223372036854776E18,
            .R64G64B64A64_SFLOAT => return 1.7976931348623157E308,
            .D16_UNORM_S8_UINT => return 255.0,
            .D24_UNORM_S8_UINT => return 255.0,
            .D32_SFLOAT_S8_UINT => return 255.0,
            .DXBC6H_UFLOAT => return 3.4028234663852886E38,
            .DXBC6H_SFLOAT => return 3.4028234663852886E38,
         else => return 1.0,
        }
    }
    else if(channel == 2) {
         switch(fmt) {
            .R8G8B8_UINT => return 255.0,
            .R8G8B8_SINT => return 127.0,
            .B8G8R8_UINT => return 255.0,
            .B8G8R8_SINT => return 127.0,
            .R8G8B8A8_UINT => return 255.0,
            .R8G8B8A8_SINT => return 127.0,
            .B8G8R8A8_UINT => return 255.0,
            .B8G8R8A8_SINT => return 127.0,
            .A2R10G10B10_UINT => return 1023.0,
            .A2R10G10B10_SINT => return 511.0,
            .A2B10G10R10_UINT => return 1023.0,
            .A2B10G10R10_SINT => return 511.0,
            .R10G10B10A2_UINT => return 1023.0,
            .R10G10B10A2_SINT => return 511.0,
            .B10G10R10A2_UINT => return 1023.0,
            .B10G10R10A2_SINT => return 511.0,
            .B10G11R11_UFLOAT => return 0.0,
            .E5_UINT_B9G9R9_UFLOAT => return 0.0,
            .R16G16B16_UINT => return 65535.0,
            .R16G16B16_SINT => return 32767.0,
            .R16G16B16_SFLOAT => return 65504.0,
            .R16G16B16_SBFLOAT => return 3.4028234663852886E38,
            .R16G16B16A16_UINT => return 65535.0,
            .R16G16B16A16_SINT => return 32767.0,
            .R16G16B16A16_SFLOAT => return 65504.0,
            .R16G16B16A16_SBFLOAT => return 3.4028234663852886E38,
            .R32G32B32_UINT => return 4.294967295E9,
            .R32G32B32_SINT => return 2.147483647E9,
            .R32G32B32_SFLOAT => return 3.4028234663852886E38,
            .R32G32B32A32_UINT => return 4.294967295E9,
            .R32G32B32A32_SINT => return 2.147483647E9,
            .R32G32B32A32_SFLOAT => return 3.4028234663852886E38,
            .R64G64B64_UINT => return 1.8446744073709552E19,
            .R64G64B64_SINT => return 9.223372036854776E18,
            .R64G64B64_SFLOAT => return 1.7976931348623157E308,
            .R64G64B64A64_UINT => return 1.8446744073709552E19,
            .R64G64B64A64_SINT => return 9.223372036854776E18,
            .R64G64B64A64_SFLOAT => return 1.7976931348623157E308,
            .DXBC6H_UFLOAT => return 3.4028234663852886E38,
            .DXBC6H_SFLOAT => return 3.4028234663852886E38,
         else => return 1.0,
        }
    }
    else if(channel == 3) {
         switch(fmt) {
            .R8G8B8A8_UINT => return 255.0,
            .R8G8B8A8_SINT => return 127.0,
            .B8G8R8A8_UINT => return 255.0,
            .B8G8R8A8_SINT => return 127.0,
            .A2R10G10B10_UINT => return 1023.0,
            .A2R10G10B10_SINT => return 511.0,
            .A2B10G10R10_UINT => return 1023.0,
            .A2B10G10R10_SINT => return 511.0,
            .R10G10B10A2_UINT => return 3.0,
            .B10G10R10A2_UINT => return 3.0,
            .E5_UINT_B9G9R9_UFLOAT => return 0.0,
            .R16G16B16A16_UINT => return 65535.0,
            .R16G16B16A16_SINT => return 32767.0,
            .R16G16B16A16_SFLOAT => return 65504.0,
            .R16G16B16A16_SBFLOAT => return 3.4028234663852886E38,
            .R32G32B32A32_UINT => return 4.294967295E9,
            .R32G32B32A32_SINT => return 2.147483647E9,
            .R32G32B32A32_SFLOAT => return 3.4028234663852886E38,
            .R64G64B64A64_UINT => return 1.8446744073709552E19,
            .R64G64B64A64_SINT => return 9.223372036854776E18,
            .R64G64B64A64_SFLOAT => return 1.7976931348623157E308,
            .DXBC6H_UFLOAT => return 3.4028234663852886E38,
            .DXBC6H_SFLOAT => return 3.4028234663852886E38,
         else => return 1.0,
        }
    }
    return 0.0;

}

pub fn ChannelBitWidth(fmt: TinyImageFormat, channel: LogicalChannel) u8 {
    return ChannelBitWidthAtPhysicalChannel(fmt, LogicalChannelToPhysical(fmt, channel));
}

pub fn Minimum(fmt: TinyImageFormat, channel: LogicalChannel) f64 {
    return MinimumAtPhysicalChannel(fmt, LogicalChannelToPhysical(fmt, channel));
}

pub fn Maximum(fmt: TinyImageFormat, channel: LogicalChannel) f64 {
    return MaximumAtPhysicalChannel(fmt, LogicalChannelToPhysical(fmt, channel));
}

pub fn PhysicalChannelToLogical(fmt: TinyImageFormat, channel: PhysicalChannel) LogicalChannel {
    if(@enumToInt(channel) >= ChannelCount(channel)) return .Const0
    else switch(channel) {
        ._0 => switch(fmt) {
            .UNDEFINED => return .const0,
            .G4R4_UNORM => return .green,
            .A8_UNORM => return .alpha,
            .B2G3R3_UNORM => return .blue,
            .B4G4R4A4_UNORM => return .blue,
            .B4G4R4X4_UNORM => return .blue,
            .A4R4G4B4_UNORM => return .alpha,
            .X4R4G4B4_UNORM => return .const1,
            .A4B4G4R4_UNORM => return .alpha,
            .X4B4G4R4_UNORM => return .const1,
            .B5G6R5_UNORM => return .blue,
            .B5G5R5A1_UNORM => return .blue,
            .A1R5G5B5_UNORM => return .alpha,
            .A1B5G5R5_UNORM => return .alpha,
            .B5G5R5X1_UNORM => return .blue,
            .X1R5G5B5_UNORM => return .const1,
            .X1B5G5R5_UNORM => return .const1,
            .B2G3R3A8_UNORM => return .blue,
            .G8R8_UNORM => return .green,
            .G8R8_SNORM => return .green,
            .B8G8R8_UNORM => return .blue,
            .B8G8R8_SNORM => return .blue,
            .B8G8R8_UINT => return .blue,
            .B8G8R8_SINT => return .blue,
            .B8G8R8_SRGB => return .blue,
            .B8G8R8A8_UNORM => return .blue,
            .B8G8R8A8_SNORM => return .blue,
            .B8G8R8A8_UINT => return .blue,
            .B8G8R8A8_SINT => return .blue,
            .B8G8R8A8_SRGB => return .blue,
            .B8G8R8X8_UNORM => return .blue,
            .G16R16_UNORM => return .green,
            .G16R16_SNORM => return .green,
            .A2R10G10B10_UNORM => return .alpha,
            .A2R10G10B10_SNORM => return .alpha,
            .A2R10G10B10_UINT => return .alpha,
            .A2R10G10B10_SINT => return .alpha,
            .A2B10G10R10_UNORM => return .alpha,
            .A2B10G10R10_SNORM => return .alpha,
            .A2B10G10R10_UINT => return .alpha,
            .A2B10G10R10_SINT => return .alpha,
            .B10G10R10A2_UNORM => return .blue,
            .B10G10R10A2_SNORM => return .blue,
            .B10G10R10A2_UINT => return .blue,
            .B10G10R10A2_SINT => return .blue,
            .B10G11R11_UFLOAT => return .blue,
            .E5_UINT_B9G9R9_UFLOAT => return .alpha,
            .D16_UNORM => return .depth,
            .X8_D24_UNORM => return .const0,
            .D32_SFLOAT => return .depth,
            .S8_UINT => return .stencil,
            .D16_UNORM_S8_UINT => return .depth,
            .D24_UNORM_S8_UINT => return .depth,
            .D32_SFLOAT_S8_UINT => return .depth,
            else => return .Red
        },
        ._1 => switch(fmt) {
            .G4R4_UNORM => return .red,
            .A4R4G4B4_UNORM => return .red,
            .X4R4G4B4_UNORM => return .red,
            .A4B4G4R4_UNORM => return .blue,
            .X4B4G4R4_UNORM => return .blue,
            .A1R5G5B5_UNORM => return .red,
            .A1B5G5R5_UNORM => return .blue,
            .X1R5G5B5_UNORM => return .red,
            .X1B5G5R5_UNORM => return .blue,
            .G8R8_UNORM => return .red,
            .G8R8_SNORM => return .red,
            .G16R16_UNORM => return .red,
            .G16R16_SNORM => return .red,
            .A2R10G10B10_UNORM => return .red,
            .A2R10G10B10_SNORM => return .red,
            .A2R10G10B10_UINT => return .red,
            .A2R10G10B10_SINT => return .red,
            .A2B10G10R10_UNORM => return .blue,
            .A2B10G10R10_SNORM => return .blue,
            .A2B10G10R10_UINT => return .blue,
            .A2B10G10R10_SINT => return .blue,
            .E5_UINT_B9G9R9_UFLOAT => return .blue,
            .X8_D24_UNORM => return .depth,
            .D16_UNORM_S8_UINT => return .stencil,
            .D24_UNORM_S8_UINT => return .stencil,
            .D32_SFLOAT_S8_UINT => return .stencil,
            .DXBC1_RGB_UNORM => return .const0,
            .DXBC1_RGB_SRGB => return .const0,
            .DXBC1_RGBA_UNORM => return .const0,
            .DXBC1_RGBA_SRGB => return .const0,
            .DXBC2_UNORM => return .const0,
            .DXBC2_SRGB => return .const0,
            .DXBC3_UNORM => return .const0,
            .DXBC3_SRGB => return .const0,
            .DXBC5_UNORM => return .const0,
            .DXBC5_SNORM => return .const0,
            .DXBC6H_UFLOAT => return .const0,
            .DXBC6H_SFLOAT => return .const0,
            .DXBC7_UNORM => return .const0,
            .DXBC7_SRGB => return .const0,
            .PVRTC1_2BPP_UNORM => return .const0,
            .PVRTC1_4BPP_UNORM => return .const0,
            .PVRTC2_2BPP_UNORM => return .const0,
            .PVRTC2_4BPP_UNORM => return .const0,
            .PVRTC1_2BPP_SRGB => return .const0,
            .PVRTC1_4BPP_SRGB => return .const0,
            .PVRTC2_2BPP_SRGB => return .const0,
            .PVRTC2_4BPP_SRGB => return .const0,
            .ETC2_R8G8B8_UNORM => return .const0,
            .ETC2_R8G8B8_SRGB => return .const0,
            .ETC2_R8G8B8A1_UNORM => return .const0,
            .ETC2_R8G8B8A1_SRGB => return .const0,
            .ETC2_R8G8B8A8_UNORM => return .const0,
            .ETC2_R8G8B8A8_SRGB => return .const0,
            .ETC2_EAC_R11G11_UNORM => return .const0,
            .ETC2_EAC_R11G11_SNORM => return .const0,
            .ASTC_4x4_UNORM => return .const0,
            .ASTC_4x4_SRGB => return .const0,
            .ASTC_5x4_UNORM => return .const0,
            .ASTC_5x4_SRGB => return .const0,
            .ASTC_5x5_UNORM => return .const0,
            .ASTC_5x5_SRGB => return .const0,
            .ASTC_6x5_UNORM => return .const0,
            .ASTC_6x5_SRGB => return .const0,
            .ASTC_6x6_UNORM => return .const0,
            .ASTC_6x6_SRGB => return .const0,
            .ASTC_8x5_UNORM => return .const0,
            .ASTC_8x5_SRGB => return .const0,
            .ASTC_8x8_UNORM => return .const0,
            .ASTC_8x8_SRGB => return .const0,
            .ASTC_10x5_UNORM => return .const0,
            .ASTC_10x5_SRGB => return .const0,
            .ASTC_10x6_UNORM => return .const0,
            .ASTC_10x6_SRGB => return .const0,
            .ASTC_10x8_UNORM => return .const0,
            .ASTC_10x8_SRGB => return .const0,
            .ASTC_10x10_UNORM => return .const0,
            .ASTC_10x10_SRGB => return .const0,
            .ASTC_12x10_UNORM => return .const0,
            .ASTC_12x10_SRGB => return .const0,
            .ASTC_12x12_UNORM => return .const0,
            .ASTC_12x12_SRGB => return .const0,
            .CLUT_P4A4 => return .alpha,
            .CLUT_P8A8 => return .alpha,
            else => return .Green
        },
        ._2 => switch(fmt) {
            .B2G3R3_UNORM => return .red,
            .B4G4R4A4_UNORM => return .red,
            .B4G4R4X4_UNORM => return .red,
            .A4R4G4B4_UNORM => return .green,
            .X4R4G4B4_UNORM => return .green,
            .A4B4G4R4_UNORM => return .green,
            .X4B4G4R4_UNORM => return .green,
            .B5G6R5_UNORM => return .red,
            .B5G5R5A1_UNORM => return .red,
            .A1R5G5B5_UNORM => return .green,
            .A1B5G5R5_UNORM => return .green,
            .B5G5R5X1_UNORM => return .red,
            .X1R5G5B5_UNORM => return .green,
            .X1B5G5R5_UNORM => return .green,
            .B2G3R3A8_UNORM => return .red,
            .B8G8R8_UNORM => return .red,
            .B8G8R8_SNORM => return .red,
            .B8G8R8_UINT => return .red,
            .B8G8R8_SINT => return .red,
            .B8G8R8_SRGB => return .red,
            .B8G8R8A8_UNORM => return .red,
            .B8G8R8A8_SNORM => return .red,
            .B8G8R8A8_UINT => return .red,
            .B8G8R8A8_SINT => return .red,
            .B8G8R8A8_SRGB => return .red,
            .B8G8R8X8_UNORM => return .red,
            .A2R10G10B10_UNORM => return .green,
            .A2R10G10B10_SNORM => return .green,
            .A2R10G10B10_UINT => return .green,
            .A2R10G10B10_SINT => return .green,
            .A2B10G10R10_UNORM => return .green,
            .A2B10G10R10_SNORM => return .green,
            .A2B10G10R10_UINT => return .green,
            .A2B10G10R10_SINT => return .green,
            .B10G10R10A2_UNORM => return .red,
            .B10G10R10A2_SNORM => return .red,
            .B10G10R10A2_UINT => return .red,
            .B10G10R10A2_SINT => return .red,
            .B10G11R11_UFLOAT => return .red,
            .E5_UINT_B9G9R9_UFLOAT => return .green,
            .DXBC1_RGB_UNORM => return .const0,
            .DXBC1_RGB_SRGB => return .const0,
            .DXBC1_RGBA_UNORM => return .const0,
            .DXBC1_RGBA_SRGB => return .const0,
            .DXBC2_UNORM => return .const0,
            .DXBC2_SRGB => return .const0,
            .DXBC3_UNORM => return .const0,
            .DXBC3_SRGB => return .const0,
            .DXBC6H_UFLOAT => return .const0,
            .DXBC6H_SFLOAT => return .const0,
            .DXBC7_UNORM => return .const0,
            .DXBC7_SRGB => return .const0,
            .PVRTC1_2BPP_UNORM => return .const0,
            .PVRTC1_4BPP_UNORM => return .const0,
            .PVRTC2_2BPP_UNORM => return .const0,
            .PVRTC2_4BPP_UNORM => return .const0,
            .PVRTC1_2BPP_SRGB => return .const0,
            .PVRTC1_4BPP_SRGB => return .const0,
            .PVRTC2_2BPP_SRGB => return .const0,
            .PVRTC2_4BPP_SRGB => return .const0,
            .ETC2_R8G8B8_UNORM => return .const0,
            .ETC2_R8G8B8_SRGB => return .const0,
            .ETC2_R8G8B8A1_UNORM => return .const0,
            .ETC2_R8G8B8A1_SRGB => return .const0,
            .ETC2_R8G8B8A8_UNORM => return .const0,
            .ETC2_R8G8B8A8_SRGB => return .const0,
            .ASTC_4x4_UNORM => return .const0,
            .ASTC_4x4_SRGB => return .const0,
            .ASTC_5x4_UNORM => return .const0,
            .ASTC_5x4_SRGB => return .const0,
            .ASTC_5x5_UNORM => return .const0,
            .ASTC_5x5_SRGB => return .const0,
            .ASTC_6x5_UNORM => return .const0,
            .ASTC_6x5_SRGB => return .const0,
            .ASTC_6x6_UNORM => return .const0,
            .ASTC_6x6_SRGB => return .const0,
            .ASTC_8x5_UNORM => return .const0,
            .ASTC_8x5_SRGB => return .const0,
            .ASTC_8x8_UNORM => return .const0,
            .ASTC_8x8_SRGB => return .const0,
            .ASTC_10x5_UNORM => return .const0,
            .ASTC_10x5_SRGB => return .const0,
            .ASTC_10x6_UNORM => return .const0,
            .ASTC_10x6_SRGB => return .const0,
            .ASTC_10x8_UNORM => return .const0,
            .ASTC_10x8_SRGB => return .const0,
            .ASTC_10x10_UNORM => return .const0,
            .ASTC_10x10_SRGB => return .const0,
            .ASTC_12x10_UNORM => return .const0,
            .ASTC_12x10_SRGB => return .const0,
            .ASTC_12x12_UNORM => return .const0,
            .ASTC_12x12_SRGB => return .const0,
            else => return .Blue
        },
        ._3 => switch(fmt) {
            .R4G4B4X4_UNORM => return .const1,
            .B4G4R4X4_UNORM => return .const1,
            .A4R4G4B4_UNORM => return .blue,
            .X4R4G4B4_UNORM => return .blue,
            .A4B4G4R4_UNORM => return .red,
            .X4B4G4R4_UNORM => return .red,
            .A1R5G5B5_UNORM => return .blue,
            .A1B5G5R5_UNORM => return .red,
            .R5G5B5X1_UNORM => return .const1,
            .B5G5R5X1_UNORM => return .const1,
            .X1R5G5B5_UNORM => return .blue,
            .X1B5G5R5_UNORM => return .red,
            .R8G8B8X8_UNORM => return .const1,
            .B8G8R8X8_UNORM => return .const1,
            .A2R10G10B10_UNORM => return .blue,
            .A2R10G10B10_SNORM => return .blue,
            .A2R10G10B10_UINT => return .blue,
            .A2R10G10B10_SINT => return .blue,
            .A2B10G10R10_UNORM => return .red,
            .A2B10G10R10_SNORM => return .red,
            .A2B10G10R10_UINT => return .red,
            .A2B10G10R10_SINT => return .red,
            .E5_UINT_B9G9R9_UFLOAT => return .red,
            .R64G64B64A64_UINT => return .blue,
            .R64G64B64A64_SINT => return .blue,
            .R64G64B64A64_SFLOAT => return .blue,
            .DXBC1_RGBA_UNORM => return .const0,
            .DXBC1_RGBA_SRGB => return .const0,
            .DXBC2_UNORM => return .const0,
            .DXBC2_SRGB => return .const0,
            .DXBC3_UNORM => return .const0,
            .DXBC3_SRGB => return .const0,
            .DXBC7_UNORM => return .const0,
            .DXBC7_SRGB => return .const0,
            .PVRTC1_2BPP_UNORM => return .const0,
            .PVRTC1_4BPP_UNORM => return .const0,
            .PVRTC2_2BPP_UNORM => return .const0,
            .PVRTC2_4BPP_UNORM => return .const0,
            .PVRTC1_2BPP_SRGB => return .const0,
            .PVRTC1_4BPP_SRGB => return .const0,
            .PVRTC2_2BPP_SRGB => return .const0,
            .PVRTC2_4BPP_SRGB => return .const0,
            .ETC2_R8G8B8A1_UNORM => return .const0,
            .ETC2_R8G8B8A1_SRGB => return .const0,
            .ETC2_R8G8B8A8_UNORM => return .const0,
            .ETC2_R8G8B8A8_SRGB => return .const0,
            .ASTC_4x4_UNORM => return .const0,
            .ASTC_4x4_SRGB => return .const0,
            .ASTC_5x4_UNORM => return .const0,
            .ASTC_5x4_SRGB => return .const0,
            .ASTC_5x5_UNORM => return .const0,
            .ASTC_5x5_SRGB => return .const0,
            .ASTC_6x5_UNORM => return .const0,
            .ASTC_6x5_SRGB => return .const0,
            .ASTC_6x6_UNORM => return .const0,
            .ASTC_6x6_SRGB => return .const0,
            .ASTC_8x5_UNORM => return .const0,
            .ASTC_8x5_SRGB => return .const0,
            .ASTC_8x8_UNORM => return .const0,
            .ASTC_8x8_SRGB => return .const0,
            .ASTC_10x5_UNORM => return .const0,
            .ASTC_10x5_SRGB => return .const0,
            .ASTC_10x6_UNORM => return .const0,
            .ASTC_10x6_SRGB => return .const0,
            .ASTC_10x8_UNORM => return .const0,
            .ASTC_10x8_SRGB => return .const0,
            .ASTC_10x10_UNORM => return .const0,
            .ASTC_10x10_SRGB => return .const0,
            .ASTC_12x10_UNORM => return .const0,
            .ASTC_12x10_SRGB => return .const0,
            .ASTC_12x12_UNORM => return .const0,
            .ASTC_12x12_SRGB => return .const0,
            else => return .Alpha
        },
        .Const0 => return .Const0,
        .Const1 => return .Const1,
    }
}

pub fn LogicalChannelToPhysical(fmt: TinyImageFormat, channel: LogicalChannel) PhysicalChannel {
    switch(channel) {
        .Red => switch(fmt) {
            .UNDEFINED => return .const0,
            .G4R4_UNORM => return .position1,
            .A8_UNORM => return .const0,
            .B2G3R3_UNORM => return .position2,
            .B4G4R4A4_UNORM => return .position2,
            .B4G4R4X4_UNORM => return .position2,
            .A4R4G4B4_UNORM => return .position1,
            .X4R4G4B4_UNORM => return .position1,
            .A4B4G4R4_UNORM => return .positionp3,
            .X4B4G4R4_UNORM => return .positionp3,
            .B5G6R5_UNORM => return .position2,
            .B5G5R5A1_UNORM => return .position2,
            .A1R5G5B5_UNORM => return .position1,
            .A1B5G5R5_UNORM => return .positionp3,
            .B5G5R5X1_UNORM => return .position2,
            .X1R5G5B5_UNORM => return .position1,
            .X1B5G5R5_UNORM => return .positionp3,
            .B2G3R3A8_UNORM => return .position2,
            .G8R8_UNORM => return .position1,
            .G8R8_SNORM => return .position1,
            .B8G8R8_UNORM => return .position2,
            .B8G8R8_SNORM => return .position2,
            .B8G8R8_UINT => return .position2,
            .B8G8R8_SINT => return .position2,
            .B8G8R8_SRGB => return .position2,
            .B8G8R8A8_UNORM => return .position2,
            .B8G8R8A8_SNORM => return .position2,
            .B8G8R8A8_UINT => return .position2,
            .B8G8R8A8_SINT => return .position2,
            .B8G8R8A8_SRGB => return .position2,
            .B8G8R8X8_UNORM => return .position2,
            .G16R16_UNORM => return .position1,
            .G16R16_SNORM => return .position1,
            .A2R10G10B10_UNORM => return .position1,
            .A2R10G10B10_SNORM => return .position1,
            .A2R10G10B10_UINT => return .position1,
            .A2R10G10B10_SINT => return .position1,
            .A2B10G10R10_UNORM => return .positionp3,
            .A2B10G10R10_SNORM => return .positionp3,
            .A2B10G10R10_UINT => return .positionp3,
            .A2B10G10R10_SINT => return .positionp3,
            .B10G10R10A2_UNORM => return .position2,
            .B10G10R10A2_SNORM => return .position2,
            .B10G10R10A2_UINT => return .position2,
            .B10G10R10A2_SINT => return .position2,
            .B10G11R11_UFLOAT => return .position2,
            .E5_UINT_B9G9R9_UFLOAT => return .positionp3,
            .D16_UNORM => return .const0,
            .X8_D24_UNORM => return .const0,
            .D32_SFLOAT => return .const0,
            .S8_UINT => return .const0,
            .D16_UNORM_S8_UINT => return .const0,
            .D24_UNORM_S8_UINT => return .const0,
            .D32_SFLOAT_S8_UINT => return .const0,
            else => return ._0
        },
        .Green => switch(fmt) {
            .UNDEFINED => return .const0,
            .R1_UNORM => return .const0,
            .R2_UNORM => return .const0,
            .R4_UNORM => return .const0,
            .G4R4_UNORM => return .position0,
            .A8_UNORM => return .const0,
            .R8_UNORM => return .const0,
            .R8_SNORM => return .const0,
            .R8_UINT => return .const0,
            .R8_SINT => return .const0,
            .R8_SRGB => return .const0,
            .A4R4G4B4_UNORM => return .position2,
            .X4R4G4B4_UNORM => return .position2,
            .A4B4G4R4_UNORM => return .position2,
            .X4B4G4R4_UNORM => return .position2,
            .A1R5G5B5_UNORM => return .position2,
            .A1B5G5R5_UNORM => return .position2,
            .X1R5G5B5_UNORM => return .position2,
            .X1B5G5R5_UNORM => return .position2,
            .G8R8_UNORM => return .position0,
            .G8R8_SNORM => return .position0,
            .R16_UNORM => return .const0,
            .R16_SNORM => return .const0,
            .R16_UINT => return .const0,
            .R16_SINT => return .const0,
            .R16_SFLOAT => return .const0,
            .R16_SBFLOAT => return .const0,
            .G16R16_UNORM => return .position0,
            .G16R16_SNORM => return .position0,
            .R32_UINT => return .const0,
            .R32_SINT => return .const0,
            .R32_SFLOAT => return .const0,
            .A2R10G10B10_UNORM => return .position2,
            .A2R10G10B10_SNORM => return .position2,
            .A2R10G10B10_UINT => return .position2,
            .A2R10G10B10_SINT => return .position2,
            .A2B10G10R10_UNORM => return .position2,
            .A2B10G10R10_SNORM => return .position2,
            .A2B10G10R10_UINT => return .position2,
            .A2B10G10R10_SINT => return .position2,
            .E5_UINT_B9G9R9_UFLOAT => return .position2,
            .R64_UINT => return .const0,
            .R64_SINT => return .const0,
            .R64_SFLOAT => return .const0,
            .D16_UNORM => return .const0,
            .X8_D24_UNORM => return .const0,
            .D32_SFLOAT => return .const0,
            .S8_UINT => return .const0,
            .D16_UNORM_S8_UINT => return .const0,
            .D24_UNORM_S8_UINT => return .const0,
            .D32_SFLOAT_S8_UINT => return .const0,
            .DXBC1_RGB_UNORM => return .position0,
            .DXBC1_RGB_SRGB => return .position0,
            .DXBC1_RGBA_UNORM => return .position0,
            .DXBC1_RGBA_SRGB => return .position0,
            .DXBC2_UNORM => return .position0,
            .DXBC2_SRGB => return .position0,
            .DXBC3_UNORM => return .position0,
            .DXBC3_SRGB => return .position0,
            .DXBC4_UNORM => return .position0,
            .DXBC4_SNORM => return .position0,
            .DXBC5_UNORM => return .position0,
            .DXBC5_SNORM => return .position0,
            .DXBC6H_UFLOAT => return .position0,
            .DXBC6H_SFLOAT => return .position0,
            .DXBC7_UNORM => return .position0,
            .DXBC7_SRGB => return .position0,
            .PVRTC1_2BPP_UNORM => return .position0,
            .PVRTC1_4BPP_UNORM => return .position0,
            .PVRTC2_2BPP_UNORM => return .position0,
            .PVRTC2_4BPP_UNORM => return .position0,
            .PVRTC1_2BPP_SRGB => return .position0,
            .PVRTC1_4BPP_SRGB => return .position0,
            .PVRTC2_2BPP_SRGB => return .position0,
            .PVRTC2_4BPP_SRGB => return .position0,
            .ETC2_R8G8B8_UNORM => return .position0,
            .ETC2_R8G8B8_SRGB => return .position0,
            .ETC2_R8G8B8A1_UNORM => return .position0,
            .ETC2_R8G8B8A1_SRGB => return .position0,
            .ETC2_R8G8B8A8_UNORM => return .position0,
            .ETC2_R8G8B8A8_SRGB => return .position0,
            .ETC2_EAC_R11_UNORM => return .position0,
            .ETC2_EAC_R11_SNORM => return .position0,
            .ETC2_EAC_R11G11_UNORM => return .position0,
            .ETC2_EAC_R11G11_SNORM => return .position0,
            .ASTC_4x4_UNORM => return .position0,
            .ASTC_4x4_SRGB => return .position0,
            .ASTC_5x4_UNORM => return .position0,
            .ASTC_5x4_SRGB => return .position0,
            .ASTC_5x5_UNORM => return .position0,
            .ASTC_5x5_SRGB => return .position0,
            .ASTC_6x5_UNORM => return .position0,
            .ASTC_6x5_SRGB => return .position0,
            .ASTC_6x6_UNORM => return .position0,
            .ASTC_6x6_SRGB => return .position0,
            .ASTC_8x5_UNORM => return .position0,
            .ASTC_8x5_SRGB => return .position0,
            .ASTC_8x8_UNORM => return .position0,
            .ASTC_8x8_SRGB => return .position0,
            .ASTC_10x5_UNORM => return .position0,
            .ASTC_10x5_SRGB => return .position0,
            .ASTC_10x6_UNORM => return .position0,
            .ASTC_10x6_SRGB => return .position0,
            .ASTC_10x8_UNORM => return .position0,
            .ASTC_10x8_SRGB => return .position0,
            .ASTC_10x10_UNORM => return .position0,
            .ASTC_10x10_SRGB => return .position0,
            .ASTC_12x10_UNORM => return .position0,
            .ASTC_12x10_SRGB => return .position0,
            .ASTC_12x12_UNORM => return .position0,
            .ASTC_12x12_SRGB => return .position0,
            .CLUT_P4 => return .position0,
            .CLUT_P4A4 => return .position0,
            .CLUT_P8 => return .position0,
            .CLUT_P8A8 => return .position0,
            else => return ._1
        },
        .Blue => switch(fmt) {
            .UNDEFINED => return .const0,
            .R1_UNORM => return .const0,
            .R2_UNORM => return .const0,
            .R4_UNORM => return .const0,
            .R4G4_UNORM => return .const0,
            .G4R4_UNORM => return .const0,
            .A8_UNORM => return .const0,
            .R8_UNORM => return .const0,
            .R8_SNORM => return .const0,
            .R8_UINT => return .const0,
            .R8_SINT => return .const0,
            .R8_SRGB => return .const0,
            .B2G3R3_UNORM => return .position0,
            .B4G4R4A4_UNORM => return .position0,
            .B4G4R4X4_UNORM => return .position0,
            .A4R4G4B4_UNORM => return .positionp3,
            .X4R4G4B4_UNORM => return .positionp3,
            .A4B4G4R4_UNORM => return .position1,
            .X4B4G4R4_UNORM => return .position1,
            .B5G6R5_UNORM => return .position0,
            .B5G5R5A1_UNORM => return .position0,
            .A1R5G5B5_UNORM => return .positionp3,
            .A1B5G5R5_UNORM => return .position1,
            .B5G5R5X1_UNORM => return .position0,
            .X1R5G5B5_UNORM => return .positionp3,
            .X1B5G5R5_UNORM => return .position1,
            .B2G3R3A8_UNORM => return .position0,
            .R8G8_UNORM => return .const0,
            .R8G8_SNORM => return .const0,
            .G8R8_UNORM => return .const0,
            .G8R8_SNORM => return .const0,
            .R8G8_UINT => return .const0,
            .R8G8_SINT => return .const0,
            .R8G8_SRGB => return .const0,
            .R16_UNORM => return .const0,
            .R16_SNORM => return .const0,
            .R16_UINT => return .const0,
            .R16_SINT => return .const0,
            .R16_SFLOAT => return .const0,
            .R16_SBFLOAT => return .const0,
            .B8G8R8_UNORM => return .position0,
            .B8G8R8_SNORM => return .position0,
            .B8G8R8_UINT => return .position0,
            .B8G8R8_SINT => return .position0,
            .B8G8R8_SRGB => return .position0,
            .B8G8R8A8_UNORM => return .position0,
            .B8G8R8A8_SNORM => return .position0,
            .B8G8R8A8_UINT => return .position0,
            .B8G8R8A8_SINT => return .position0,
            .B8G8R8A8_SRGB => return .position0,
            .B8G8R8X8_UNORM => return .position0,
            .R16G16_UNORM => return .const0,
            .G16R16_UNORM => return .const0,
            .R16G16_SNORM => return .const0,
            .G16R16_SNORM => return .const0,
            .R16G16_UINT => return .const0,
            .R16G16_SINT => return .const0,
            .R16G16_SFLOAT => return .const0,
            .R16G16_SBFLOAT => return .const0,
            .R32_UINT => return .const0,
            .R32_SINT => return .const0,
            .R32_SFLOAT => return .const0,
            .A2R10G10B10_UNORM => return .positionp3,
            .A2R10G10B10_SNORM => return .positionp3,
            .A2R10G10B10_UINT => return .positionp3,
            .A2R10G10B10_SINT => return .positionp3,
            .A2B10G10R10_UNORM => return .position1,
            .A2B10G10R10_SNORM => return .position1,
            .A2B10G10R10_UINT => return .position1,
            .A2B10G10R10_SINT => return .position1,
            .B10G10R10A2_UNORM => return .position0,
            .B10G10R10A2_SNORM => return .position0,
            .B10G10R10A2_UINT => return .position0,
            .B10G10R10A2_SINT => return .position0,
            .B10G11R11_UFLOAT => return .position0,
            .E5_UINT_B9G9R9_UFLOAT => return .position1,
            .R32G32_UINT => return .const0,
            .R32G32_SINT => return .const0,
            .R32G32_SFLOAT => return .const0,
            .R64_UINT => return .const0,
            .R64_SINT => return .const0,
            .R64_SFLOAT => return .const0,
            .R64G64_UINT => return .const0,
            .R64G64_SINT => return .const0,
            .R64G64_SFLOAT => return .const0,
            .D16_UNORM => return .const0,
            .X8_D24_UNORM => return .const0,
            .D32_SFLOAT => return .const0,
            .S8_UINT => return .const0,
            .D16_UNORM_S8_UINT => return .const0,
            .D24_UNORM_S8_UINT => return .const0,
            .D32_SFLOAT_S8_UINT => return .const0,
            .DXBC1_RGB_UNORM => return .position0,
            .DXBC1_RGB_SRGB => return .position0,
            .DXBC1_RGBA_UNORM => return .position0,
            .DXBC1_RGBA_SRGB => return .position0,
            .DXBC2_UNORM => return .position0,
            .DXBC2_SRGB => return .position0,
            .DXBC3_UNORM => return .position0,
            .DXBC3_SRGB => return .position0,
            .DXBC4_UNORM => return .position0,
            .DXBC4_SNORM => return .position0,
            .DXBC5_UNORM => return .position0,
            .DXBC5_SNORM => return .position0,
            .DXBC6H_UFLOAT => return .position0,
            .DXBC6H_SFLOAT => return .position0,
            .DXBC7_UNORM => return .position0,
            .DXBC7_SRGB => return .position0,
            .PVRTC1_2BPP_UNORM => return .position0,
            .PVRTC1_4BPP_UNORM => return .position0,
            .PVRTC2_2BPP_UNORM => return .position0,
            .PVRTC2_4BPP_UNORM => return .position0,
            .PVRTC1_2BPP_SRGB => return .position0,
            .PVRTC1_4BPP_SRGB => return .position0,
            .PVRTC2_2BPP_SRGB => return .position0,
            .PVRTC2_4BPP_SRGB => return .position0,
            .ETC2_R8G8B8_UNORM => return .position0,
            .ETC2_R8G8B8_SRGB => return .position0,
            .ETC2_R8G8B8A1_UNORM => return .position0,
            .ETC2_R8G8B8A1_SRGB => return .position0,
            .ETC2_R8G8B8A8_UNORM => return .position0,
            .ETC2_R8G8B8A8_SRGB => return .position0,
            .ETC2_EAC_R11_UNORM => return .position0,
            .ETC2_EAC_R11_SNORM => return .position0,
            .ETC2_EAC_R11G11_UNORM => return .position0,
            .ETC2_EAC_R11G11_SNORM => return .position0,
            .ASTC_4x4_UNORM => return .position0,
            .ASTC_4x4_SRGB => return .position0,
            .ASTC_5x4_UNORM => return .position0,
            .ASTC_5x4_SRGB => return .position0,
            .ASTC_5x5_UNORM => return .position0,
            .ASTC_5x5_SRGB => return .position0,
            .ASTC_6x5_UNORM => return .position0,
            .ASTC_6x5_SRGB => return .position0,
            .ASTC_6x6_UNORM => return .position0,
            .ASTC_6x6_SRGB => return .position0,
            .ASTC_8x5_UNORM => return .position0,
            .ASTC_8x5_SRGB => return .position0,
            .ASTC_8x8_UNORM => return .position0,
            .ASTC_8x8_SRGB => return .position0,
            .ASTC_10x5_UNORM => return .position0,
            .ASTC_10x5_SRGB => return .position0,
            .ASTC_10x6_UNORM => return .position0,
            .ASTC_10x6_SRGB => return .position0,
            .ASTC_10x8_UNORM => return .position0,
            .ASTC_10x8_SRGB => return .position0,
            .ASTC_10x10_UNORM => return .position0,
            .ASTC_10x10_SRGB => return .position0,
            .ASTC_12x10_UNORM => return .position0,
            .ASTC_12x10_SRGB => return .position0,
            .ASTC_12x12_UNORM => return .position0,
            .ASTC_12x12_SRGB => return .position0,
            .CLUT_P4 => return .position0,
            .CLUT_P4A4 => return .position0,
            .CLUT_P8 => return .position0,
            .CLUT_P8A8 => return .position0,
            else => return ._2
        },
        .Alpha => switch(fmt) {
            .UNDEFINED => return .const0,
            .R1_UNORM => return .const1,
            .R2_UNORM => return .const1,
            .R4_UNORM => return .const1,
            .R4G4_UNORM => return .const1,
            .G4R4_UNORM => return .const1,
            .A8_UNORM => return .position0,
            .R8_UNORM => return .const1,
            .R8_SNORM => return .const1,
            .R8_UINT => return .const1,
            .R8_SINT => return .const1,
            .R8_SRGB => return .const1,
            .B2G3R3_UNORM => return .const1,
            .R4G4B4X4_UNORM => return .const1,
            .B4G4R4X4_UNORM => return .const1,
            .A4R4G4B4_UNORM => return .position0,
            .X4R4G4B4_UNORM => return .const1,
            .A4B4G4R4_UNORM => return .position0,
            .X4B4G4R4_UNORM => return .const1,
            .R5G6B5_UNORM => return .const1,
            .B5G6R5_UNORM => return .const1,
            .A1R5G5B5_UNORM => return .position0,
            .A1B5G5R5_UNORM => return .position0,
            .R5G5B5X1_UNORM => return .const1,
            .B5G5R5X1_UNORM => return .const1,
            .X1R5G5B5_UNORM => return .const1,
            .X1B5G5R5_UNORM => return .const1,
            .R8G8_UNORM => return .const1,
            .R8G8_SNORM => return .const1,
            .G8R8_UNORM => return .const1,
            .G8R8_SNORM => return .const1,
            .R8G8_UINT => return .const1,
            .R8G8_SINT => return .const1,
            .R8G8_SRGB => return .const1,
            .R16_UNORM => return .const1,
            .R16_SNORM => return .const1,
            .R16_UINT => return .const1,
            .R16_SINT => return .const1,
            .R16_SFLOAT => return .const1,
            .R16_SBFLOAT => return .const1,
            .R8G8B8_UNORM => return .const1,
            .R8G8B8_SNORM => return .const1,
            .R8G8B8_UINT => return .const1,
            .R8G8B8_SINT => return .const1,
            .R8G8B8_SRGB => return .const1,
            .B8G8R8_UNORM => return .const1,
            .B8G8R8_SNORM => return .const1,
            .B8G8R8_UINT => return .const1,
            .B8G8R8_SINT => return .const1,
            .B8G8R8_SRGB => return .const1,
            .R8G8B8X8_UNORM => return .const1,
            .B8G8R8X8_UNORM => return .const1,
            .R16G16_UNORM => return .const1,
            .G16R16_UNORM => return .const1,
            .R16G16_SNORM => return .const1,
            .G16R16_SNORM => return .const1,
            .R16G16_UINT => return .const1,
            .R16G16_SINT => return .const1,
            .R16G16_SFLOAT => return .const1,
            .R16G16_SBFLOAT => return .const1,
            .R32_UINT => return .const1,
            .R32_SINT => return .const1,
            .R32_SFLOAT => return .const1,
            .A2R10G10B10_UNORM => return .position0,
            .A2R10G10B10_SNORM => return .position0,
            .A2R10G10B10_UINT => return .position0,
            .A2R10G10B10_SINT => return .position0,
            .A2B10G10R10_UNORM => return .position0,
            .A2B10G10R10_SNORM => return .position0,
            .A2B10G10R10_UINT => return .position0,
            .A2B10G10R10_SINT => return .position0,
            .B10G11R11_UFLOAT => return .const1,
            .E5_UINT_B9G9R9_UFLOAT => return .position0,
            .R16G16B16_UNORM => return .const1,
            .R16G16B16_SNORM => return .const1,
            .R16G16B16_UINT => return .const1,
            .R16G16B16_SINT => return .const1,
            .R16G16B16_SFLOAT => return .const1,
            .R16G16B16_SBFLOAT => return .const1,
            .R32G32_UINT => return .const1,
            .R32G32_SINT => return .const1,
            .R32G32_SFLOAT => return .const1,
            .R64_UINT => return .const1,
            .R64_SINT => return .const1,
            .R64_SFLOAT => return .const1,
            .R32G32B32_UINT => return .const1,
            .R32G32B32_SINT => return .const1,
            .R32G32B32_SFLOAT => return .const1,
            .R64G64_UINT => return .const1,
            .R64G64_SINT => return .const1,
            .R64G64_SFLOAT => return .const1,
            .R64G64B64_UINT => return .const1,
            .R64G64B64_SINT => return .const1,
            .R64G64B64_SFLOAT => return .const1,
            .R64G64B64A64_UINT => return .const1,
            .R64G64B64A64_SINT => return .const1,
            .R64G64B64A64_SFLOAT => return .const1,
            .D16_UNORM => return .const0,
            .X8_D24_UNORM => return .const0,
            .D32_SFLOAT => return .const0,
            .S8_UINT => return .const0,
            .D16_UNORM_S8_UINT => return .const0,
            .D24_UNORM_S8_UINT => return .const0,
            .D32_SFLOAT_S8_UINT => return .const0,
            .DXBC1_RGB_UNORM => return .position0,
            .DXBC1_RGB_SRGB => return .position0,
            .DXBC1_RGBA_UNORM => return .position0,
            .DXBC1_RGBA_SRGB => return .position0,
            .DXBC2_UNORM => return .position0,
            .DXBC2_SRGB => return .position0,
            .DXBC3_UNORM => return .position0,
            .DXBC3_SRGB => return .position0,
            .DXBC4_UNORM => return .position0,
            .DXBC4_SNORM => return .position0,
            .DXBC5_UNORM => return .position0,
            .DXBC5_SNORM => return .position0,
            .DXBC6H_UFLOAT => return .position0,
            .DXBC6H_SFLOAT => return .position0,
            .DXBC7_UNORM => return .position0,
            .DXBC7_SRGB => return .position0,
            .PVRTC1_2BPP_UNORM => return .position0,
            .PVRTC1_4BPP_UNORM => return .position0,
            .PVRTC2_2BPP_UNORM => return .position0,
            .PVRTC2_4BPP_UNORM => return .position0,
            .PVRTC1_2BPP_SRGB => return .position0,
            .PVRTC1_4BPP_SRGB => return .position0,
            .PVRTC2_2BPP_SRGB => return .position0,
            .PVRTC2_4BPP_SRGB => return .position0,
            .ETC2_R8G8B8_UNORM => return .position0,
            .ETC2_R8G8B8_SRGB => return .position0,
            .ETC2_R8G8B8A1_UNORM => return .position0,
            .ETC2_R8G8B8A1_SRGB => return .position0,
            .ETC2_R8G8B8A8_UNORM => return .position0,
            .ETC2_R8G8B8A8_SRGB => return .position0,
            .ETC2_EAC_R11_UNORM => return .position0,
            .ETC2_EAC_R11_SNORM => return .position0,
            .ETC2_EAC_R11G11_UNORM => return .position0,
            .ETC2_EAC_R11G11_SNORM => return .position0,
            .ASTC_4x4_UNORM => return .position0,
            .ASTC_4x4_SRGB => return .position0,
            .ASTC_5x4_UNORM => return .position0,
            .ASTC_5x4_SRGB => return .position0,
            .ASTC_5x5_UNORM => return .position0,
            .ASTC_5x5_SRGB => return .position0,
            .ASTC_6x5_UNORM => return .position0,
            .ASTC_6x5_SRGB => return .position0,
            .ASTC_6x6_UNORM => return .position0,
            .ASTC_6x6_SRGB => return .position0,
            .ASTC_8x5_UNORM => return .position0,
            .ASTC_8x5_SRGB => return .position0,
            .ASTC_8x8_UNORM => return .position0,
            .ASTC_8x8_SRGB => return .position0,
            .ASTC_10x5_UNORM => return .position0,
            .ASTC_10x5_SRGB => return .position0,
            .ASTC_10x6_UNORM => return .position0,
            .ASTC_10x6_SRGB => return .position0,
            .ASTC_10x8_UNORM => return .position0,
            .ASTC_10x8_SRGB => return .position0,
            .ASTC_10x10_UNORM => return .position0,
            .ASTC_10x10_SRGB => return .position0,
            .ASTC_12x10_UNORM => return .position0,
            .ASTC_12x10_SRGB => return .position0,
            .ASTC_12x12_UNORM => return .position0,
            .ASTC_12x12_SRGB => return .position0,
            .CLUT_P4 => return .const0,
            .CLUT_P4A4 => return .position1,
            .CLUT_P8 => return .const0,
            .CLUT_P8A8 => return .position1,
            else => return ._3
        },
        .Depth => switch(fmt) {
            .D16_UNORM => return .position0,
            .X8_D24_UNORM => return .position1,
            .D32_SFLOAT => return .position0,
            .D16_UNORM_S8_UINT => return .position0,
            .D24_UNORM_S8_UINT => return .position0,
            .D32_SFLOAT_S8_UINT => return .position0,
            else => return .Const0
        },
        .Stencil => switch(fmt) {
            .S8_UINT => return .position0,
            .D16_UNORM_S8_UINT => return .position1,
            .D24_UNORM_S8_UINT => return .position1,
            .D32_SFLOAT_S8_UINT => return .position1,
            else => return .Const0
        },
        .Const0 => return .Const0,
        .Const1 => return .Const1,
    }
}

