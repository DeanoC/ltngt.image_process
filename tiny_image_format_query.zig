// Do Not Edit Autogenerated by tiny_image_format_generator

const TinyImageFormat = @import("tiny_image_format.zig").Format;

pub fn HasNormalised(fmt: TinyImageFormat) bool {
    switch(fmt) {
        .R1_UNORM => return true,
        .R2_UNORM => return true,
        .R4_UNORM => return true,
        .R4G4_UNORM => return true,
        .G4R4_UNORM => return true,
        .A8_UNORM => return true,
        .R8_UNORM => return true,
        .R8_SNORM => return true,
        .R8_SRGB => return true,
        .B2G3R3_UNORM => return true,
        .R4G4B4A4_UNORM => return true,
        .R4G4B4X4_UNORM => return true,
        .B4G4R4A4_UNORM => return true,
        .B4G4R4X4_UNORM => return true,
        .A4R4G4B4_UNORM => return true,
        .X4R4G4B4_UNORM => return true,
        .A4B4G4R4_UNORM => return true,
        .X4B4G4R4_UNORM => return true,
        .R5G6B5_UNORM => return true,
        .B5G6R5_UNORM => return true,
        .R5G5B5A1_UNORM => return true,
        .B5G5R5A1_UNORM => return true,
        .A1R5G5B5_UNORM => return true,
        .A1B5G5R5_UNORM => return true,
        .R5G5B5X1_UNORM => return true,
        .B5G5R5X1_UNORM => return true,
        .X1R5G5B5_UNORM => return true,
        .X1B5G5R5_UNORM => return true,
        .B2G3R3A8_UNORM => return true,
        .R8G8_UNORM => return true,
        .R8G8_SNORM => return true,
        .G8R8_UNORM => return true,
        .G8R8_SNORM => return true,
        .R8G8_SRGB => return true,
        .R16_UNORM => return true,
        .R16_SNORM => return true,
        .R8G8B8_UNORM => return true,
        .R8G8B8_SNORM => return true,
        .R8G8B8_SRGB => return true,
        .B8G8R8_UNORM => return true,
        .B8G8R8_SNORM => return true,
        .B8G8R8_SRGB => return true,
        .R8G8B8A8_UNORM => return true,
        .R8G8B8A8_SNORM => return true,
        .R8G8B8A8_SRGB => return true,
        .B8G8R8A8_UNORM => return true,
        .B8G8R8A8_SNORM => return true,
        .B8G8R8A8_SRGB => return true,
        .R8G8B8X8_UNORM => return true,
        .B8G8R8X8_UNORM => return true,
        .R16G16_UNORM => return true,
        .G16R16_UNORM => return true,
        .R16G16_SNORM => return true,
        .G16R16_SNORM => return true,
        .A2R10G10B10_UNORM => return true,
        .A2R10G10B10_SNORM => return true,
        .A2B10G10R10_UNORM => return true,
        .A2B10G10R10_SNORM => return true,
        .R10G10B10A2_UNORM => return true,
        .R10G10B10A2_SNORM => return true,
        .B10G10R10A2_UNORM => return true,
        .B10G10R10A2_SNORM => return true,
        .R16G16B16_UNORM => return true,
        .R16G16B16_SNORM => return true,
        .R16G16B16A16_UNORM => return true,
        .R16G16B16A16_SNORM => return true,
        .D16_UNORM => return true,
        .X8_D24_UNORM => return true,
        .D16_UNORM_S8_UINT => return true,
        .D24_UNORM_S8_UINT => return true,
        .DXBC1_RGB_UNORM => return true,
        .DXBC1_RGB_SRGB => return true,
        .DXBC1_RGBA_UNORM => return true,
        .DXBC1_RGBA_SRGB => return true,
        .DXBC2_UNORM => return true,
        .DXBC2_SRGB => return true,
        .DXBC3_UNORM => return true,
        .DXBC3_SRGB => return true,
        .DXBC4_UNORM => return true,
        .DXBC4_SNORM => return true,
        .DXBC5_UNORM => return true,
        .DXBC5_SNORM => return true,
        .DXBC7_UNORM => return true,
        .DXBC7_SRGB => return true,
        .PVRTC1_2BPP_UNORM => return true,
        .PVRTC1_4BPP_UNORM => return true,
        .PVRTC2_2BPP_UNORM => return true,
        .PVRTC2_4BPP_UNORM => return true,
        .PVRTC1_2BPP_SRGB => return true,
        .PVRTC1_4BPP_SRGB => return true,
        .PVRTC2_2BPP_SRGB => return true,
        .PVRTC2_4BPP_SRGB => return true,
        .ETC2_R8G8B8_UNORM => return true,
        .ETC2_R8G8B8_SRGB => return true,
        .ETC2_R8G8B8A1_UNORM => return true,
        .ETC2_R8G8B8A1_SRGB => return true,
        .ETC2_R8G8B8A8_UNORM => return true,
        .ETC2_R8G8B8A8_SRGB => return true,
        .ETC2_EAC_R11_UNORM => return true,
        .ETC2_EAC_R11_SNORM => return true,
        .ETC2_EAC_R11G11_UNORM => return true,
        .ETC2_EAC_R11G11_SNORM => return true,
        .ASTC_4x4_UNORM => return true,
        .ASTC_4x4_SRGB => return true,
        .ASTC_5x4_UNORM => return true,
        .ASTC_5x4_SRGB => return true,
        .ASTC_5x5_UNORM => return true,
        .ASTC_5x5_SRGB => return true,
        .ASTC_6x5_UNORM => return true,
        .ASTC_6x5_SRGB => return true,
        .ASTC_6x6_UNORM => return true,
        .ASTC_6x6_SRGB => return true,
        .ASTC_8x5_UNORM => return true,
        .ASTC_8x5_SRGB => return true,
        .ASTC_8x8_UNORM => return true,
        .ASTC_8x8_SRGB => return true,
        .ASTC_10x5_UNORM => return true,
        .ASTC_10x5_SRGB => return true,
        .ASTC_10x6_UNORM => return true,
        .ASTC_10x6_SRGB => return true,
        .ASTC_10x8_UNORM => return true,
        .ASTC_10x8_SRGB => return true,
        .ASTC_10x10_UNORM => return true,
        .ASTC_10x10_SRGB => return true,
        .ASTC_12x10_UNORM => return true,
        .ASTC_12x10_SRGB => return true,
        .ASTC_12x12_UNORM => return true,
        .ASTC_12x12_SRGB => return true,
        .CLUT_P4 => return true,
        .CLUT_P4A4 => return true,
        .CLUT_P8 => return true,
        .CLUT_P8A8 => return true,
        else => return false,
    }
}

pub fn HasSigned(fmt: TinyImageFormat) bool {
    switch(fmt) {
        .R8_SNORM => return true,
        .R8_SINT => return true,
        .R8G8_SNORM => return true,
        .G8R8_SNORM => return true,
        .R8G8_SINT => return true,
        .R16_SNORM => return true,
        .R16_SINT => return true,
        .R16_SFLOAT => return true,
        .R16_SBFLOAT => return true,
        .R8G8B8_SNORM => return true,
        .R8G8B8_SINT => return true,
        .B8G8R8_SNORM => return true,
        .B8G8R8_SINT => return true,
        .R8G8B8A8_SNORM => return true,
        .R8G8B8A8_SINT => return true,
        .B8G8R8A8_SNORM => return true,
        .B8G8R8A8_SINT => return true,
        .R16G16_SNORM => return true,
        .G16R16_SNORM => return true,
        .R16G16_SINT => return true,
        .R16G16_SFLOAT => return true,
        .R16G16_SBFLOAT => return true,
        .R32_SINT => return true,
        .R32_SFLOAT => return true,
        .A2R10G10B10_SNORM => return true,
        .A2R10G10B10_SINT => return true,
        .A2B10G10R10_SNORM => return true,
        .A2B10G10R10_SINT => return true,
        .R10G10B10A2_SNORM => return true,
        .R10G10B10A2_SINT => return true,
        .B10G10R10A2_SNORM => return true,
        .B10G10R10A2_SINT => return true,
        .R16G16B16_SNORM => return true,
        .R16G16B16_SINT => return true,
        .R16G16B16_SFLOAT => return true,
        .R16G16B16_SBFLOAT => return true,
        .R16G16B16A16_SNORM => return true,
        .R16G16B16A16_SINT => return true,
        .R16G16B16A16_SFLOAT => return true,
        .R16G16B16A16_SBFLOAT => return true,
        .R32G32_SINT => return true,
        .R32G32_SFLOAT => return true,
        .R64_SINT => return true,
        .R64_SFLOAT => return true,
        .R32G32B32_SINT => return true,
        .R32G32B32_SFLOAT => return true,
        .R32G32B32A32_SINT => return true,
        .R32G32B32A32_SFLOAT => return true,
        .R64G64_SINT => return true,
        .R64G64_SFLOAT => return true,
        .R64G64B64_SINT => return true,
        .R64G64B64_SFLOAT => return true,
        .R64G64B64A64_SINT => return true,
        .R64G64B64A64_SFLOAT => return true,
        .D32_SFLOAT => return true,
        .D32_SFLOAT_S8_UINT => return true,
        .ETC2_EAC_R11_SNORM => return true,
        .ETC2_EAC_R11G11_SNORM => return true,
        else => return false,
    }
}

pub fn HasSRGB(fmt: TinyImageFormat) bool {
    switch(fmt) {
        .R8_SRGB => return true,
        .R8G8_SRGB => return true,
        .R8G8B8_SRGB => return true,
        .B8G8R8_SRGB => return true,
        .R8G8B8A8_SRGB => return true,
        .B8G8R8A8_SRGB => return true,
        .DXBC1_RGB_SRGB => return true,
        .DXBC1_RGBA_SRGB => return true,
        .DXBC2_SRGB => return true,
        .DXBC3_SRGB => return true,
        .DXBC7_SRGB => return true,
        .PVRTC1_2BPP_SRGB => return true,
        .PVRTC1_4BPP_SRGB => return true,
        .PVRTC2_2BPP_SRGB => return true,
        .PVRTC2_4BPP_SRGB => return true,
        .ETC2_R8G8B8_SRGB => return true,
        .ETC2_R8G8B8A1_SRGB => return true,
        .ETC2_R8G8B8A8_SRGB => return true,
        .ASTC_4x4_SRGB => return true,
        .ASTC_5x4_SRGB => return true,
        .ASTC_5x5_SRGB => return true,
        .ASTC_6x5_SRGB => return true,
        .ASTC_6x6_SRGB => return true,
        .ASTC_8x5_SRGB => return true,
        .ASTC_8x8_SRGB => return true,
        .ASTC_10x5_SRGB => return true,
        .ASTC_10x6_SRGB => return true,
        .ASTC_10x8_SRGB => return true,
        .ASTC_10x10_SRGB => return true,
        .ASTC_12x10_SRGB => return true,
        .ASTC_12x12_SRGB => return true,
        .CLUT_P4 => return true,
        .CLUT_P4A4 => return true,
        .CLUT_P8 => return true,
        .CLUT_P8A8 => return true,
        else => return false,
    }
}

pub fn HasDepthOnly(fmt: TinyImageFormat) bool {
    switch(fmt) {
        .D16_UNORM => return true,
        .X8_D24_UNORM => return true,
        .D32_SFLOAT => return true,
        else => return false,
    }
}

pub fn HasStencilOnly(fmt: TinyImageFormat) bool {
    switch(fmt) {
        .S8_UINT => return true,
        else => return false,
    }
}

pub fn HasDepthAndStencil(fmt: TinyImageFormat) bool {
    switch(fmt) {
        .D16_UNORM_S8_UINT => return true,
        .D24_UNORM_S8_UINT => return true,
        .D32_SFLOAT_S8_UINT => return true,
        else => return false,
    }
}

pub fn IsPackFormat(fmt: TinyImageFormat) bool {
    switch(fmt) {
        .R1_UNORM => return true,
        .R2_UNORM => return true,
        .R4_UNORM => return true,
        .R4G4_UNORM => return true,
        .G4R4_UNORM => return true,
        .A8_UNORM => return true,
        .R8_UNORM => return true,
        .R8_SNORM => return true,
        .R8_UINT => return true,
        .R8_SINT => return true,
        .R8_SRGB => return true,
        .B2G3R3_UNORM => return true,
        .R4G4B4A4_UNORM => return true,
        .R4G4B4X4_UNORM => return true,
        .B4G4R4A4_UNORM => return true,
        .B4G4R4X4_UNORM => return true,
        .A4R4G4B4_UNORM => return true,
        .X4R4G4B4_UNORM => return true,
        .A4B4G4R4_UNORM => return true,
        .X4B4G4R4_UNORM => return true,
        .R5G6B5_UNORM => return true,
        .B5G6R5_UNORM => return true,
        .R5G5B5A1_UNORM => return true,
        .B5G5R5A1_UNORM => return true,
        .A1R5G5B5_UNORM => return true,
        .A1B5G5R5_UNORM => return true,
        .R5G5B5X1_UNORM => return true,
        .B5G5R5X1_UNORM => return true,
        .X1R5G5B5_UNORM => return true,
        .X1B5G5R5_UNORM => return true,
        .B2G3R3A8_UNORM => return true,
        .R8G8_UNORM => return true,
        .R8G8_SNORM => return true,
        .G8R8_UNORM => return true,
        .G8R8_SNORM => return true,
        .R8G8_UINT => return true,
        .R8G8_SINT => return true,
        .R8G8_SRGB => return true,
        .R16_UNORM => return true,
        .R16_SNORM => return true,
        .R16_UINT => return true,
        .R16_SINT => return true,
        .R16_SFLOAT => return true,
        .R16_SBFLOAT => return true,
        .R8G8B8_UNORM => return true,
        .R8G8B8_SNORM => return true,
        .R8G8B8_UINT => return true,
        .R8G8B8_SINT => return true,
        .R8G8B8_SRGB => return true,
        .B8G8R8_UNORM => return true,
        .B8G8R8_SNORM => return true,
        .B8G8R8_UINT => return true,
        .B8G8R8_SINT => return true,
        .B8G8R8_SRGB => return true,
        .R8G8B8A8_UNORM => return true,
        .R8G8B8A8_SNORM => return true,
        .R8G8B8A8_UINT => return true,
        .R8G8B8A8_SINT => return true,
        .R8G8B8A8_SRGB => return true,
        .B8G8R8A8_UNORM => return true,
        .B8G8R8A8_SNORM => return true,
        .B8G8R8A8_UINT => return true,
        .B8G8R8A8_SINT => return true,
        .B8G8R8A8_SRGB => return true,
        .R8G8B8X8_UNORM => return true,
        .B8G8R8X8_UNORM => return true,
        .R16G16_UNORM => return true,
        .G16R16_UNORM => return true,
        .R16G16_SNORM => return true,
        .G16R16_SNORM => return true,
        .R16G16_UINT => return true,
        .R16G16_SINT => return true,
        .R16G16_SFLOAT => return true,
        .R16G16_SBFLOAT => return true,
        .R32_UINT => return true,
        .R32_SINT => return true,
        .R32_SFLOAT => return true,
        .A2R10G10B10_UNORM => return true,
        .A2R10G10B10_SNORM => return true,
        .A2R10G10B10_UINT => return true,
        .A2R10G10B10_SINT => return true,
        .A2B10G10R10_UNORM => return true,
        .A2B10G10R10_SNORM => return true,
        .A2B10G10R10_UINT => return true,
        .A2B10G10R10_SINT => return true,
        .R10G10B10A2_UNORM => return true,
        .R10G10B10A2_SNORM => return true,
        .R10G10B10A2_UINT => return true,
        .R10G10B10A2_SINT => return true,
        .B10G10R10A2_UNORM => return true,
        .B10G10R10A2_SNORM => return true,
        .B10G10R10A2_UINT => return true,
        .B10G10R10A2_SINT => return true,
        .B10G11R11_UFLOAT => return true,
        .E5_UINT_B9G9R9_UFLOAT => return true,
        .R16G16B16_UNORM => return true,
        .R16G16B16_SNORM => return true,
        .R16G16B16_UINT => return true,
        .R16G16B16_SINT => return true,
        .R16G16B16_SFLOAT => return true,
        .R16G16B16_SBFLOAT => return true,
        .R16G16B16A16_UNORM => return true,
        .R16G16B16A16_SNORM => return true,
        .R16G16B16A16_UINT => return true,
        .R16G16B16A16_SINT => return true,
        .R16G16B16A16_SFLOAT => return true,
        .R16G16B16A16_SBFLOAT => return true,
        .R32G32_UINT => return true,
        .R32G32_SINT => return true,
        .R32G32_SFLOAT => return true,
        .R64_UINT => return true,
        .R64_SINT => return true,
        .R64_SFLOAT => return true,
        .R32G32B32_UINT => return true,
        .R32G32B32_SINT => return true,
        .R32G32B32_SFLOAT => return true,
        .R32G32B32A32_UINT => return true,
        .R32G32B32A32_SINT => return true,
        .R32G32B32A32_SFLOAT => return true,
        .R64G64_UINT => return true,
        .R64G64_SINT => return true,
        .R64G64_SFLOAT => return true,
        .R64G64B64_UINT => return true,
        .R64G64B64_SINT => return true,
        .R64G64B64_SFLOAT => return true,
        .R64G64B64A64_UINT => return true,
        .R64G64B64A64_SINT => return true,
        .R64G64B64A64_SFLOAT => return true,
        else => return false,
    }
}

pub fn IsDepthStencilFormat(fmt: TinyImageFormat) bool {
    switch(fmt) {
        .D16_UNORM => return true,
        .X8_D24_UNORM => return true,
        .D32_SFLOAT => return true,
        .S8_UINT => return true,
        .D16_UNORM_S8_UINT => return true,
        .D24_UNORM_S8_UINT => return true,
        .D32_SFLOAT_S8_UINT => return true,
        else => return false,
    }
}

pub fn IsDxtcFormat(fmt: TinyImageFormat) bool {
    switch(fmt) {
        .D16_UNORM => return true,
        .X8_D24_UNORM => return true,
        .D32_SFLOAT => return true,
        .S8_UINT => return true,
        .D16_UNORM_S8_UINT => return true,
        .D24_UNORM_S8_UINT => return true,
        .D32_SFLOAT_S8_UINT => return true,
        else => return false,
    }
}

pub fn IsEtcFormat(fmt: TinyImageFormat) bool {
    switch(fmt) {
        .ETC2_R8G8B8_UNORM => return true,
        .ETC2_R8G8B8_SRGB => return true,
        .ETC2_R8G8B8A1_UNORM => return true,
        .ETC2_R8G8B8A1_SRGB => return true,
        .ETC2_R8G8B8A8_UNORM => return true,
        .ETC2_R8G8B8A8_SRGB => return true,
        .ETC2_EAC_R11_UNORM => return true,
        .ETC2_EAC_R11_SNORM => return true,
        .ETC2_EAC_R11G11_UNORM => return true,
        .ETC2_EAC_R11G11_SNORM => return true,
        else => return false,
    }
}

pub fn IsAstcFormat(fmt: TinyImageFormat) bool {
    switch(fmt) {
        .ASTC_4x4_UNORM => return true,
        .ASTC_4x4_SRGB => return true,
        .ASTC_5x4_UNORM => return true,
        .ASTC_5x4_SRGB => return true,
        .ASTC_5x5_UNORM => return true,
        .ASTC_5x5_SRGB => return true,
        .ASTC_6x5_UNORM => return true,
        .ASTC_6x5_SRGB => return true,
        .ASTC_6x6_UNORM => return true,
        .ASTC_6x6_SRGB => return true,
        .ASTC_8x5_UNORM => return true,
        .ASTC_8x5_SRGB => return true,
        .ASTC_8x8_UNORM => return true,
        .ASTC_8x8_SRGB => return true,
        .ASTC_10x5_UNORM => return true,
        .ASTC_10x5_SRGB => return true,
        .ASTC_10x6_UNORM => return true,
        .ASTC_10x6_SRGB => return true,
        .ASTC_10x8_UNORM => return true,
        .ASTC_10x8_SRGB => return true,
        .ASTC_10x10_UNORM => return true,
        .ASTC_10x10_SRGB => return true,
        .ASTC_12x10_UNORM => return true,
        .ASTC_12x10_SRGB => return true,
        .ASTC_12x12_UNORM => return true,
        .ASTC_12x12_SRGB => return true,
        else => return false,
    }
}

pub fn IsClutFormat(fmt: TinyImageFormat) bool {
    switch(fmt) {
        .CLUT_P4 => return true,
        .CLUT_P4A4 => return true,
        .CLUT_P8 => return true,
        .CLUT_P8A8 => return true,
        else => return false,
    }
}

pub fn IsCompressed(fmt: TinyImageFormat) bool {
    switch(fmt) {
        .DXBC1_RGB_UNORM => return true,
        .DXBC1_RGB_SRGB => return true,
        .DXBC1_RGBA_UNORM => return true,
        .DXBC1_RGBA_SRGB => return true,
        .DXBC2_UNORM => return true,
        .DXBC2_SRGB => return true,
        .DXBC3_UNORM => return true,
        .DXBC3_SRGB => return true,
        .DXBC4_UNORM => return true,
        .DXBC4_SNORM => return true,
        .DXBC5_UNORM => return true,
        .DXBC5_SNORM => return true,
        .DXBC6H_UFLOAT => return true,
        .DXBC6H_SFLOAT => return true,
        .DXBC7_UNORM => return true,
        .DXBC7_SRGB => return true,
        .PVRTC1_2BPP_UNORM => return true,
        .PVRTC1_4BPP_UNORM => return true,
        .PVRTC2_2BPP_UNORM => return true,
        .PVRTC2_4BPP_UNORM => return true,
        .PVRTC1_2BPP_SRGB => return true,
        .PVRTC1_4BPP_SRGB => return true,
        .PVRTC2_2BPP_SRGB => return true,
        .PVRTC2_4BPP_SRGB => return true,
        .ETC2_R8G8B8_UNORM => return true,
        .ETC2_R8G8B8_SRGB => return true,
        .ETC2_R8G8B8A1_UNORM => return true,
        .ETC2_R8G8B8A1_SRGB => return true,
        .ETC2_R8G8B8A8_UNORM => return true,
        .ETC2_R8G8B8A8_SRGB => return true,
        .ETC2_EAC_R11_UNORM => return true,
        .ETC2_EAC_R11_SNORM => return true,
        .ETC2_EAC_R11G11_UNORM => return true,
        .ETC2_EAC_R11G11_SNORM => return true,
        .ASTC_4x4_UNORM => return true,
        .ASTC_4x4_SRGB => return true,
        .ASTC_5x4_UNORM => return true,
        .ASTC_5x4_SRGB => return true,
        .ASTC_5x5_UNORM => return true,
        .ASTC_5x5_SRGB => return true,
        .ASTC_6x5_UNORM => return true,
        .ASTC_6x5_SRGB => return true,
        .ASTC_6x6_UNORM => return true,
        .ASTC_6x6_SRGB => return true,
        .ASTC_8x5_UNORM => return true,
        .ASTC_8x5_SRGB => return true,
        .ASTC_8x8_UNORM => return true,
        .ASTC_8x8_SRGB => return true,
        .ASTC_10x5_UNORM => return true,
        .ASTC_10x5_SRGB => return true,
        .ASTC_10x6_UNORM => return true,
        .ASTC_10x6_SRGB => return true,
        .ASTC_10x8_UNORM => return true,
        .ASTC_10x8_SRGB => return true,
        .ASTC_10x10_UNORM => return true,
        .ASTC_10x10_SRGB => return true,
        .ASTC_12x10_UNORM => return true,
        .ASTC_12x10_SRGB => return true,
        .ASTC_12x12_UNORM => return true,
        .ASTC_12x12_SRGB => return true,
        else => return false,
    }
}

pub fn IsHomogenous(fmt: TinyImageFormat) bool {
    switch(fmt) {
        .R1_UNORM => return true,
        .R2_UNORM => return true,
        .R4_UNORM => return true,
        .R4G4_UNORM => return true,
        .G4R4_UNORM => return true,
        .A8_UNORM => return true,
        .R8_UNORM => return true,
        .R8_SNORM => return true,
        .R8_UINT => return true,
        .R8_SINT => return true,
        .R8_SRGB => return true,
        .R4G4B4A4_UNORM => return true,
        .R4G4B4X4_UNORM => return true,
        .B4G4R4A4_UNORM => return true,
        .B4G4R4X4_UNORM => return true,
        .A4R4G4B4_UNORM => return true,
        .X4R4G4B4_UNORM => return true,
        .A4B4G4R4_UNORM => return true,
        .X4B4G4R4_UNORM => return true,
        .R8G8_UNORM => return true,
        .R8G8_SNORM => return true,
        .G8R8_UNORM => return true,
        .G8R8_SNORM => return true,
        .R8G8_UINT => return true,
        .R8G8_SINT => return true,
        .R8G8_SRGB => return true,
        .R16_UNORM => return true,
        .R16_SNORM => return true,
        .R16_UINT => return true,
        .R16_SINT => return true,
        .R16_SFLOAT => return true,
        .R16_SBFLOAT => return true,
        .R8G8B8_UNORM => return true,
        .R8G8B8_SNORM => return true,
        .R8G8B8_UINT => return true,
        .R8G8B8_SINT => return true,
        .R8G8B8_SRGB => return true,
        .B8G8R8_UNORM => return true,
        .B8G8R8_SNORM => return true,
        .B8G8R8_UINT => return true,
        .B8G8R8_SINT => return true,
        .B8G8R8_SRGB => return true,
        .R8G8B8A8_UNORM => return true,
        .R8G8B8A8_SNORM => return true,
        .R8G8B8A8_UINT => return true,
        .R8G8B8A8_SINT => return true,
        .R8G8B8A8_SRGB => return true,
        .B8G8R8A8_UNORM => return true,
        .B8G8R8A8_SNORM => return true,
        .B8G8R8A8_UINT => return true,
        .B8G8R8A8_SINT => return true,
        .B8G8R8A8_SRGB => return true,
        .R8G8B8X8_UNORM => return true,
        .B8G8R8X8_UNORM => return true,
        .R16G16_UNORM => return true,
        .G16R16_UNORM => return true,
        .R16G16_SNORM => return true,
        .G16R16_SNORM => return true,
        .R16G16_UINT => return true,
        .R16G16_SINT => return true,
        .R16G16_SFLOAT => return true,
        .R16G16_SBFLOAT => return true,
        .R32_UINT => return true,
        .R32_SINT => return true,
        .R32_SFLOAT => return true,
        .R16G16B16_UNORM => return true,
        .R16G16B16_SNORM => return true,
        .R16G16B16_UINT => return true,
        .R16G16B16_SINT => return true,
        .R16G16B16_SFLOAT => return true,
        .R16G16B16_SBFLOAT => return true,
        .R16G16B16A16_UNORM => return true,
        .R16G16B16A16_SNORM => return true,
        .R16G16B16A16_UINT => return true,
        .R16G16B16A16_SINT => return true,
        .R16G16B16A16_SFLOAT => return true,
        .R16G16B16A16_SBFLOAT => return true,
        .R32G32_UINT => return true,
        .R32G32_SINT => return true,
        .R32G32_SFLOAT => return true,
        .R64_UINT => return true,
        .R64_SINT => return true,
        .R64_SFLOAT => return true,
        .R32G32B32_UINT => return true,
        .R32G32B32_SINT => return true,
        .R32G32B32_SFLOAT => return true,
        .R32G32B32A32_UINT => return true,
        .R32G32B32A32_SINT => return true,
        .R32G32B32A32_SFLOAT => return true,
        .R64G64_UINT => return true,
        .R64G64_SINT => return true,
        .R64G64_SFLOAT => return true,
        .R64G64B64_UINT => return true,
        .R64G64B64_SINT => return true,
        .R64G64B64_SFLOAT => return true,
        .R64G64B64A64_UINT => return true,
        .R64G64B64A64_SINT => return true,
        .R64G64B64A64_SFLOAT => return true,
        .D16_UNORM => return true,
        .D32_SFLOAT => return true,
        .S8_UINT => return true,
        else => return false,
    }
}

pub fn NameToFormat(name: []const u8) TinyImageFormat {
    const CompTimeStringMap = @import("std").ComptimeStringMap;
    @setEvalBranchQuota(4000);
    const nameMap = CompTimeStringMap(TinyImageFormat, .{
        .{ "UNDEFINED", .UNDEFINED },
        .{ "R1_UNORM", .R1_UNORM },
        .{ "R2_UNORM", .R2_UNORM },
        .{ "R4_UNORM", .R4_UNORM },
        .{ "R4G4_UNORM", .R4G4_UNORM },
        .{ "G4R4_UNORM", .G4R4_UNORM },
        .{ "A8_UNORM", .A8_UNORM },
        .{ "R8_UNORM", .R8_UNORM },
        .{ "R8_SNORM", .R8_SNORM },
        .{ "R8_UINT", .R8_UINT },
        .{ "R8_SINT", .R8_SINT },
        .{ "R8_SRGB", .R8_SRGB },
        .{ "B2G3R3_UNORM", .B2G3R3_UNORM },
        .{ "R4G4B4A4_UNORM", .R4G4B4A4_UNORM },
        .{ "R4G4B4X4_UNORM", .R4G4B4X4_UNORM },
        .{ "B4G4R4A4_UNORM", .B4G4R4A4_UNORM },
        .{ "B4G4R4X4_UNORM", .B4G4R4X4_UNORM },
        .{ "A4R4G4B4_UNORM", .A4R4G4B4_UNORM },
        .{ "X4R4G4B4_UNORM", .X4R4G4B4_UNORM },
        .{ "A4B4G4R4_UNORM", .A4B4G4R4_UNORM },
        .{ "X4B4G4R4_UNORM", .X4B4G4R4_UNORM },
        .{ "R5G6B5_UNORM", .R5G6B5_UNORM },
        .{ "B5G6R5_UNORM", .B5G6R5_UNORM },
        .{ "R5G5B5A1_UNORM", .R5G5B5A1_UNORM },
        .{ "B5G5R5A1_UNORM", .B5G5R5A1_UNORM },
        .{ "A1R5G5B5_UNORM", .A1R5G5B5_UNORM },
        .{ "A1B5G5R5_UNORM", .A1B5G5R5_UNORM },
        .{ "R5G5B5X1_UNORM", .R5G5B5X1_UNORM },
        .{ "B5G5R5X1_UNORM", .B5G5R5X1_UNORM },
        .{ "X1R5G5B5_UNORM", .X1R5G5B5_UNORM },
        .{ "X1B5G5R5_UNORM", .X1B5G5R5_UNORM },
        .{ "B2G3R3A8_UNORM", .B2G3R3A8_UNORM },
        .{ "R8G8_UNORM", .R8G8_UNORM },
        .{ "R8G8_SNORM", .R8G8_SNORM },
        .{ "G8R8_UNORM", .G8R8_UNORM },
        .{ "G8R8_SNORM", .G8R8_SNORM },
        .{ "R8G8_UINT", .R8G8_UINT },
        .{ "R8G8_SINT", .R8G8_SINT },
        .{ "R8G8_SRGB", .R8G8_SRGB },
        .{ "R16_UNORM", .R16_UNORM },
        .{ "R16_SNORM", .R16_SNORM },
        .{ "R16_UINT", .R16_UINT },
        .{ "R16_SINT", .R16_SINT },
        .{ "R16_SFLOAT", .R16_SFLOAT },
        .{ "R16_SBFLOAT", .R16_SBFLOAT },
        .{ "R8G8B8_UNORM", .R8G8B8_UNORM },
        .{ "R8G8B8_SNORM", .R8G8B8_SNORM },
        .{ "R8G8B8_UINT", .R8G8B8_UINT },
        .{ "R8G8B8_SINT", .R8G8B8_SINT },
        .{ "R8G8B8_SRGB", .R8G8B8_SRGB },
        .{ "B8G8R8_UNORM", .B8G8R8_UNORM },
        .{ "B8G8R8_SNORM", .B8G8R8_SNORM },
        .{ "B8G8R8_UINT", .B8G8R8_UINT },
        .{ "B8G8R8_SINT", .B8G8R8_SINT },
        .{ "B8G8R8_SRGB", .B8G8R8_SRGB },
        .{ "R8G8B8A8_UNORM", .R8G8B8A8_UNORM },
        .{ "R8G8B8A8_SNORM", .R8G8B8A8_SNORM },
        .{ "R8G8B8A8_UINT", .R8G8B8A8_UINT },
        .{ "R8G8B8A8_SINT", .R8G8B8A8_SINT },
        .{ "R8G8B8A8_SRGB", .R8G8B8A8_SRGB },
        .{ "B8G8R8A8_UNORM", .B8G8R8A8_UNORM },
        .{ "B8G8R8A8_SNORM", .B8G8R8A8_SNORM },
        .{ "B8G8R8A8_UINT", .B8G8R8A8_UINT },
        .{ "B8G8R8A8_SINT", .B8G8R8A8_SINT },
        .{ "B8G8R8A8_SRGB", .B8G8R8A8_SRGB },
        .{ "R8G8B8X8_UNORM", .R8G8B8X8_UNORM },
        .{ "B8G8R8X8_UNORM", .B8G8R8X8_UNORM },
        .{ "R16G16_UNORM", .R16G16_UNORM },
        .{ "G16R16_UNORM", .G16R16_UNORM },
        .{ "R16G16_SNORM", .R16G16_SNORM },
        .{ "G16R16_SNORM", .G16R16_SNORM },
        .{ "R16G16_UINT", .R16G16_UINT },
        .{ "R16G16_SINT", .R16G16_SINT },
        .{ "R16G16_SFLOAT", .R16G16_SFLOAT },
        .{ "R16G16_SBFLOAT", .R16G16_SBFLOAT },
        .{ "R32_UINT", .R32_UINT },
        .{ "R32_SINT", .R32_SINT },
        .{ "R32_SFLOAT", .R32_SFLOAT },
        .{ "A2R10G10B10_UNORM", .A2R10G10B10_UNORM },
        .{ "A2R10G10B10_SNORM", .A2R10G10B10_SNORM },
        .{ "A2R10G10B10_UINT", .A2R10G10B10_UINT },
        .{ "A2R10G10B10_SINT", .A2R10G10B10_SINT },
        .{ "A2B10G10R10_UNORM", .A2B10G10R10_UNORM },
        .{ "A2B10G10R10_SNORM", .A2B10G10R10_SNORM },
        .{ "A2B10G10R10_UINT", .A2B10G10R10_UINT },
        .{ "A2B10G10R10_SINT", .A2B10G10R10_SINT },
        .{ "R10G10B10A2_UNORM", .R10G10B10A2_UNORM },
        .{ "R10G10B10A2_SNORM", .R10G10B10A2_SNORM },
        .{ "R10G10B10A2_UINT", .R10G10B10A2_UINT },
        .{ "R10G10B10A2_SINT", .R10G10B10A2_SINT },
        .{ "B10G10R10A2_UNORM", .B10G10R10A2_UNORM },
        .{ "B10G10R10A2_SNORM", .B10G10R10A2_SNORM },
        .{ "B10G10R10A2_UINT", .B10G10R10A2_UINT },
        .{ "B10G10R10A2_SINT", .B10G10R10A2_SINT },
        .{ "B10G11R11_UFLOAT", .B10G11R11_UFLOAT },
        .{ "E5_UINT_B9G9R9_UFLOAT", .E5_UINT_B9G9R9_UFLOAT },
        .{ "R16G16B16_UNORM", .R16G16B16_UNORM },
        .{ "R16G16B16_SNORM", .R16G16B16_SNORM },
        .{ "R16G16B16_UINT", .R16G16B16_UINT },
        .{ "R16G16B16_SINT", .R16G16B16_SINT },
        .{ "R16G16B16_SFLOAT", .R16G16B16_SFLOAT },
        .{ "R16G16B16_SBFLOAT", .R16G16B16_SBFLOAT },
        .{ "R16G16B16A16_UNORM", .R16G16B16A16_UNORM },
        .{ "R16G16B16A16_SNORM", .R16G16B16A16_SNORM },
        .{ "R16G16B16A16_UINT", .R16G16B16A16_UINT },
        .{ "R16G16B16A16_SINT", .R16G16B16A16_SINT },
        .{ "R16G16B16A16_SFLOAT", .R16G16B16A16_SFLOAT },
        .{ "R16G16B16A16_SBFLOAT", .R16G16B16A16_SBFLOAT },
        .{ "R32G32_UINT", .R32G32_UINT },
        .{ "R32G32_SINT", .R32G32_SINT },
        .{ "R32G32_SFLOAT", .R32G32_SFLOAT },
        .{ "R64_UINT", .R64_UINT },
        .{ "R64_SINT", .R64_SINT },
        .{ "R64_SFLOAT", .R64_SFLOAT },
        .{ "R32G32B32_UINT", .R32G32B32_UINT },
        .{ "R32G32B32_SINT", .R32G32B32_SINT },
        .{ "R32G32B32_SFLOAT", .R32G32B32_SFLOAT },
        .{ "R32G32B32A32_UINT", .R32G32B32A32_UINT },
        .{ "R32G32B32A32_SINT", .R32G32B32A32_SINT },
        .{ "R32G32B32A32_SFLOAT", .R32G32B32A32_SFLOAT },
        .{ "R64G64_UINT", .R64G64_UINT },
        .{ "R64G64_SINT", .R64G64_SINT },
        .{ "R64G64_SFLOAT", .R64G64_SFLOAT },
        .{ "R64G64B64_UINT", .R64G64B64_UINT },
        .{ "R64G64B64_SINT", .R64G64B64_SINT },
        .{ "R64G64B64_SFLOAT", .R64G64B64_SFLOAT },
        .{ "R64G64B64A64_UINT", .R64G64B64A64_UINT },
        .{ "R64G64B64A64_SINT", .R64G64B64A64_SINT },
        .{ "R64G64B64A64_SFLOAT", .R64G64B64A64_SFLOAT },
        .{ "D16_UNORM", .D16_UNORM },
        .{ "X8_D24_UNORM", .X8_D24_UNORM },
        .{ "D32_SFLOAT", .D32_SFLOAT },
        .{ "S8_UINT", .S8_UINT },
        .{ "D16_UNORM_S8_UINT", .D16_UNORM_S8_UINT },
        .{ "D24_UNORM_S8_UINT", .D24_UNORM_S8_UINT },
        .{ "D32_SFLOAT_S8_UINT", .D32_SFLOAT_S8_UINT },
        .{ "DXBC1_RGB_UNORM", .DXBC1_RGB_UNORM },
        .{ "DXBC1_RGB_SRGB", .DXBC1_RGB_SRGB },
        .{ "DXBC1_RGBA_UNORM", .DXBC1_RGBA_UNORM },
        .{ "DXBC1_RGBA_SRGB", .DXBC1_RGBA_SRGB },
        .{ "DXBC2_UNORM", .DXBC2_UNORM },
        .{ "DXBC2_SRGB", .DXBC2_SRGB },
        .{ "DXBC3_UNORM", .DXBC3_UNORM },
        .{ "DXBC3_SRGB", .DXBC3_SRGB },
        .{ "DXBC4_UNORM", .DXBC4_UNORM },
        .{ "DXBC4_SNORM", .DXBC4_SNORM },
        .{ "DXBC5_UNORM", .DXBC5_UNORM },
        .{ "DXBC5_SNORM", .DXBC5_SNORM },
        .{ "DXBC6H_UFLOAT", .DXBC6H_UFLOAT },
        .{ "DXBC6H_SFLOAT", .DXBC6H_SFLOAT },
        .{ "DXBC7_UNORM", .DXBC7_UNORM },
        .{ "DXBC7_SRGB", .DXBC7_SRGB },
        .{ "PVRTC1_2BPP_UNORM", .PVRTC1_2BPP_UNORM },
        .{ "PVRTC1_4BPP_UNORM", .PVRTC1_4BPP_UNORM },
        .{ "PVRTC2_2BPP_UNORM", .PVRTC2_2BPP_UNORM },
        .{ "PVRTC2_4BPP_UNORM", .PVRTC2_4BPP_UNORM },
        .{ "PVRTC1_2BPP_SRGB", .PVRTC1_2BPP_SRGB },
        .{ "PVRTC1_4BPP_SRGB", .PVRTC1_4BPP_SRGB },
        .{ "PVRTC2_2BPP_SRGB", .PVRTC2_2BPP_SRGB },
        .{ "PVRTC2_4BPP_SRGB", .PVRTC2_4BPP_SRGB },
        .{ "ETC2_R8G8B8_UNORM", .ETC2_R8G8B8_UNORM },
        .{ "ETC2_R8G8B8_SRGB", .ETC2_R8G8B8_SRGB },
        .{ "ETC2_R8G8B8A1_UNORM", .ETC2_R8G8B8A1_UNORM },
        .{ "ETC2_R8G8B8A1_SRGB", .ETC2_R8G8B8A1_SRGB },
        .{ "ETC2_R8G8B8A8_UNORM", .ETC2_R8G8B8A8_UNORM },
        .{ "ETC2_R8G8B8A8_SRGB", .ETC2_R8G8B8A8_SRGB },
        .{ "ETC2_EAC_R11_UNORM", .ETC2_EAC_R11_UNORM },
        .{ "ETC2_EAC_R11_SNORM", .ETC2_EAC_R11_SNORM },
        .{ "ETC2_EAC_R11G11_UNORM", .ETC2_EAC_R11G11_UNORM },
        .{ "ETC2_EAC_R11G11_SNORM", .ETC2_EAC_R11G11_SNORM },
        .{ "ASTC_4x4_UNORM", .ASTC_4x4_UNORM },
        .{ "ASTC_4x4_SRGB", .ASTC_4x4_SRGB },
        .{ "ASTC_5x4_UNORM", .ASTC_5x4_UNORM },
        .{ "ASTC_5x4_SRGB", .ASTC_5x4_SRGB },
        .{ "ASTC_5x5_UNORM", .ASTC_5x5_UNORM },
        .{ "ASTC_5x5_SRGB", .ASTC_5x5_SRGB },
        .{ "ASTC_6x5_UNORM", .ASTC_6x5_UNORM },
        .{ "ASTC_6x5_SRGB", .ASTC_6x5_SRGB },
        .{ "ASTC_6x6_UNORM", .ASTC_6x6_UNORM },
        .{ "ASTC_6x6_SRGB", .ASTC_6x6_SRGB },
        .{ "ASTC_8x5_UNORM", .ASTC_8x5_UNORM },
        .{ "ASTC_8x5_SRGB", .ASTC_8x5_SRGB },
        .{ "ASTC_8x8_UNORM", .ASTC_8x8_UNORM },
        .{ "ASTC_8x8_SRGB", .ASTC_8x8_SRGB },
        .{ "ASTC_10x5_UNORM", .ASTC_10x5_UNORM },
        .{ "ASTC_10x5_SRGB", .ASTC_10x5_SRGB },
        .{ "ASTC_10x6_UNORM", .ASTC_10x6_UNORM },
        .{ "ASTC_10x6_SRGB", .ASTC_10x6_SRGB },
        .{ "ASTC_10x8_UNORM", .ASTC_10x8_UNORM },
        .{ "ASTC_10x8_SRGB", .ASTC_10x8_SRGB },
        .{ "ASTC_10x10_UNORM", .ASTC_10x10_UNORM },
        .{ "ASTC_10x10_SRGB", .ASTC_10x10_SRGB },
        .{ "ASTC_12x10_UNORM", .ASTC_12x10_UNORM },
        .{ "ASTC_12x10_SRGB", .ASTC_12x10_SRGB },
        .{ "ASTC_12x12_UNORM", .ASTC_12x12_UNORM },
        .{ "ASTC_12x12_SRGB", .ASTC_12x12_SRGB },
        .{ "CLUT_P4", .CLUT_P4 },
        .{ "CLUT_P4A4", .CLUT_P4A4 },
        .{ "CLUT_P8", .CLUT_P8 },
        .{ "CLUT_P8A8", .CLUT_P8A8 },
    });
    return nameMap.get(name).?;
}

pub fn FormatToName(fmt: TinyImageFormat) []const u8 {
    switch(fmt) {
        .UNDEFINED => return "UNDEFINED",
        .R1_UNORM => return "R1_UNORM",
        .R2_UNORM => return "R2_UNORM",
        .R4_UNORM => return "R4_UNORM",
        .R4G4_UNORM => return "R4G4_UNORM",
        .G4R4_UNORM => return "G4R4_UNORM",
        .A8_UNORM => return "A8_UNORM",
        .R8_UNORM => return "R8_UNORM",
        .R8_SNORM => return "R8_SNORM",
        .R8_UINT => return "R8_UINT",
        .R8_SINT => return "R8_SINT",
        .R8_SRGB => return "R8_SRGB",
        .B2G3R3_UNORM => return "B2G3R3_UNORM",
        .R4G4B4A4_UNORM => return "R4G4B4A4_UNORM",
        .R4G4B4X4_UNORM => return "R4G4B4X4_UNORM",
        .B4G4R4A4_UNORM => return "B4G4R4A4_UNORM",
        .B4G4R4X4_UNORM => return "B4G4R4X4_UNORM",
        .A4R4G4B4_UNORM => return "A4R4G4B4_UNORM",
        .X4R4G4B4_UNORM => return "X4R4G4B4_UNORM",
        .A4B4G4R4_UNORM => return "A4B4G4R4_UNORM",
        .X4B4G4R4_UNORM => return "X4B4G4R4_UNORM",
        .R5G6B5_UNORM => return "R5G6B5_UNORM",
        .B5G6R5_UNORM => return "B5G6R5_UNORM",
        .R5G5B5A1_UNORM => return "R5G5B5A1_UNORM",
        .B5G5R5A1_UNORM => return "B5G5R5A1_UNORM",
        .A1R5G5B5_UNORM => return "A1R5G5B5_UNORM",
        .A1B5G5R5_UNORM => return "A1B5G5R5_UNORM",
        .R5G5B5X1_UNORM => return "R5G5B5X1_UNORM",
        .B5G5R5X1_UNORM => return "B5G5R5X1_UNORM",
        .X1R5G5B5_UNORM => return "X1R5G5B5_UNORM",
        .X1B5G5R5_UNORM => return "X1B5G5R5_UNORM",
        .B2G3R3A8_UNORM => return "B2G3R3A8_UNORM",
        .R8G8_UNORM => return "R8G8_UNORM",
        .R8G8_SNORM => return "R8G8_SNORM",
        .G8R8_UNORM => return "G8R8_UNORM",
        .G8R8_SNORM => return "G8R8_SNORM",
        .R8G8_UINT => return "R8G8_UINT",
        .R8G8_SINT => return "R8G8_SINT",
        .R8G8_SRGB => return "R8G8_SRGB",
        .R16_UNORM => return "R16_UNORM",
        .R16_SNORM => return "R16_SNORM",
        .R16_UINT => return "R16_UINT",
        .R16_SINT => return "R16_SINT",
        .R16_SFLOAT => return "R16_SFLOAT",
        .R16_SBFLOAT => return "R16_SBFLOAT",
        .R8G8B8_UNORM => return "R8G8B8_UNORM",
        .R8G8B8_SNORM => return "R8G8B8_SNORM",
        .R8G8B8_UINT => return "R8G8B8_UINT",
        .R8G8B8_SINT => return "R8G8B8_SINT",
        .R8G8B8_SRGB => return "R8G8B8_SRGB",
        .B8G8R8_UNORM => return "B8G8R8_UNORM",
        .B8G8R8_SNORM => return "B8G8R8_SNORM",
        .B8G8R8_UINT => return "B8G8R8_UINT",
        .B8G8R8_SINT => return "B8G8R8_SINT",
        .B8G8R8_SRGB => return "B8G8R8_SRGB",
        .R8G8B8A8_UNORM => return "R8G8B8A8_UNORM",
        .R8G8B8A8_SNORM => return "R8G8B8A8_SNORM",
        .R8G8B8A8_UINT => return "R8G8B8A8_UINT",
        .R8G8B8A8_SINT => return "R8G8B8A8_SINT",
        .R8G8B8A8_SRGB => return "R8G8B8A8_SRGB",
        .B8G8R8A8_UNORM => return "B8G8R8A8_UNORM",
        .B8G8R8A8_SNORM => return "B8G8R8A8_SNORM",
        .B8G8R8A8_UINT => return "B8G8R8A8_UINT",
        .B8G8R8A8_SINT => return "B8G8R8A8_SINT",
        .B8G8R8A8_SRGB => return "B8G8R8A8_SRGB",
        .R8G8B8X8_UNORM => return "R8G8B8X8_UNORM",
        .B8G8R8X8_UNORM => return "B8G8R8X8_UNORM",
        .R16G16_UNORM => return "R16G16_UNORM",
        .G16R16_UNORM => return "G16R16_UNORM",
        .R16G16_SNORM => return "R16G16_SNORM",
        .G16R16_SNORM => return "G16R16_SNORM",
        .R16G16_UINT => return "R16G16_UINT",
        .R16G16_SINT => return "R16G16_SINT",
        .R16G16_SFLOAT => return "R16G16_SFLOAT",
        .R16G16_SBFLOAT => return "R16G16_SBFLOAT",
        .R32_UINT => return "R32_UINT",
        .R32_SINT => return "R32_SINT",
        .R32_SFLOAT => return "R32_SFLOAT",
        .A2R10G10B10_UNORM => return "A2R10G10B10_UNORM",
        .A2R10G10B10_SNORM => return "A2R10G10B10_SNORM",
        .A2R10G10B10_UINT => return "A2R10G10B10_UINT",
        .A2R10G10B10_SINT => return "A2R10G10B10_SINT",
        .A2B10G10R10_UNORM => return "A2B10G10R10_UNORM",
        .A2B10G10R10_SNORM => return "A2B10G10R10_SNORM",
        .A2B10G10R10_UINT => return "A2B10G10R10_UINT",
        .A2B10G10R10_SINT => return "A2B10G10R10_SINT",
        .R10G10B10A2_UNORM => return "R10G10B10A2_UNORM",
        .R10G10B10A2_SNORM => return "R10G10B10A2_SNORM",
        .R10G10B10A2_UINT => return "R10G10B10A2_UINT",
        .R10G10B10A2_SINT => return "R10G10B10A2_SINT",
        .B10G10R10A2_UNORM => return "B10G10R10A2_UNORM",
        .B10G10R10A2_SNORM => return "B10G10R10A2_SNORM",
        .B10G10R10A2_UINT => return "B10G10R10A2_UINT",
        .B10G10R10A2_SINT => return "B10G10R10A2_SINT",
        .B10G11R11_UFLOAT => return "B10G11R11_UFLOAT",
        .E5_UINT_B9G9R9_UFLOAT => return "E5_UINT_B9G9R9_UFLOAT",
        .R16G16B16_UNORM => return "R16G16B16_UNORM",
        .R16G16B16_SNORM => return "R16G16B16_SNORM",
        .R16G16B16_UINT => return "R16G16B16_UINT",
        .R16G16B16_SINT => return "R16G16B16_SINT",
        .R16G16B16_SFLOAT => return "R16G16B16_SFLOAT",
        .R16G16B16_SBFLOAT => return "R16G16B16_SBFLOAT",
        .R16G16B16A16_UNORM => return "R16G16B16A16_UNORM",
        .R16G16B16A16_SNORM => return "R16G16B16A16_SNORM",
        .R16G16B16A16_UINT => return "R16G16B16A16_UINT",
        .R16G16B16A16_SINT => return "R16G16B16A16_SINT",
        .R16G16B16A16_SFLOAT => return "R16G16B16A16_SFLOAT",
        .R16G16B16A16_SBFLOAT => return "R16G16B16A16_SBFLOAT",
        .R32G32_UINT => return "R32G32_UINT",
        .R32G32_SINT => return "R32G32_SINT",
        .R32G32_SFLOAT => return "R32G32_SFLOAT",
        .R64_UINT => return "R64_UINT",
        .R64_SINT => return "R64_SINT",
        .R64_SFLOAT => return "R64_SFLOAT",
        .R32G32B32_UINT => return "R32G32B32_UINT",
        .R32G32B32_SINT => return "R32G32B32_SINT",
        .R32G32B32_SFLOAT => return "R32G32B32_SFLOAT",
        .R32G32B32A32_UINT => return "R32G32B32A32_UINT",
        .R32G32B32A32_SINT => return "R32G32B32A32_SINT",
        .R32G32B32A32_SFLOAT => return "R32G32B32A32_SFLOAT",
        .R64G64_UINT => return "R64G64_UINT",
        .R64G64_SINT => return "R64G64_SINT",
        .R64G64_SFLOAT => return "R64G64_SFLOAT",
        .R64G64B64_UINT => return "R64G64B64_UINT",
        .R64G64B64_SINT => return "R64G64B64_SINT",
        .R64G64B64_SFLOAT => return "R64G64B64_SFLOAT",
        .R64G64B64A64_UINT => return "R64G64B64A64_UINT",
        .R64G64B64A64_SINT => return "R64G64B64A64_SINT",
        .R64G64B64A64_SFLOAT => return "R64G64B64A64_SFLOAT",
        .D16_UNORM => return "D16_UNORM",
        .X8_D24_UNORM => return "X8_D24_UNORM",
        .D32_SFLOAT => return "D32_SFLOAT",
        .S8_UINT => return "S8_UINT",
        .D16_UNORM_S8_UINT => return "D16_UNORM_S8_UINT",
        .D24_UNORM_S8_UINT => return "D24_UNORM_S8_UINT",
        .D32_SFLOAT_S8_UINT => return "D32_SFLOAT_S8_UINT",
        .DXBC1_RGB_UNORM => return "DXBC1_RGB_UNORM",
        .DXBC1_RGB_SRGB => return "DXBC1_RGB_SRGB",
        .DXBC1_RGBA_UNORM => return "DXBC1_RGBA_UNORM",
        .DXBC1_RGBA_SRGB => return "DXBC1_RGBA_SRGB",
        .DXBC2_UNORM => return "DXBC2_UNORM",
        .DXBC2_SRGB => return "DXBC2_SRGB",
        .DXBC3_UNORM => return "DXBC3_UNORM",
        .DXBC3_SRGB => return "DXBC3_SRGB",
        .DXBC4_UNORM => return "DXBC4_UNORM",
        .DXBC4_SNORM => return "DXBC4_SNORM",
        .DXBC5_UNORM => return "DXBC5_UNORM",
        .DXBC5_SNORM => return "DXBC5_SNORM",
        .DXBC6H_UFLOAT => return "DXBC6H_UFLOAT",
        .DXBC6H_SFLOAT => return "DXBC6H_SFLOAT",
        .DXBC7_UNORM => return "DXBC7_UNORM",
        .DXBC7_SRGB => return "DXBC7_SRGB",
        .PVRTC1_2BPP_UNORM => return "PVRTC1_2BPP_UNORM",
        .PVRTC1_4BPP_UNORM => return "PVRTC1_4BPP_UNORM",
        .PVRTC2_2BPP_UNORM => return "PVRTC2_2BPP_UNORM",
        .PVRTC2_4BPP_UNORM => return "PVRTC2_4BPP_UNORM",
        .PVRTC1_2BPP_SRGB => return "PVRTC1_2BPP_SRGB",
        .PVRTC1_4BPP_SRGB => return "PVRTC1_4BPP_SRGB",
        .PVRTC2_2BPP_SRGB => return "PVRTC2_2BPP_SRGB",
        .PVRTC2_4BPP_SRGB => return "PVRTC2_4BPP_SRGB",
        .ETC2_R8G8B8_UNORM => return "ETC2_R8G8B8_UNORM",
        .ETC2_R8G8B8_SRGB => return "ETC2_R8G8B8_SRGB",
        .ETC2_R8G8B8A1_UNORM => return "ETC2_R8G8B8A1_UNORM",
        .ETC2_R8G8B8A1_SRGB => return "ETC2_R8G8B8A1_SRGB",
        .ETC2_R8G8B8A8_UNORM => return "ETC2_R8G8B8A8_UNORM",
        .ETC2_R8G8B8A8_SRGB => return "ETC2_R8G8B8A8_SRGB",
        .ETC2_EAC_R11_UNORM => return "ETC2_EAC_R11_UNORM",
        .ETC2_EAC_R11_SNORM => return "ETC2_EAC_R11_SNORM",
        .ETC2_EAC_R11G11_UNORM => return "ETC2_EAC_R11G11_UNORM",
        .ETC2_EAC_R11G11_SNORM => return "ETC2_EAC_R11G11_SNORM",
        .ASTC_4x4_UNORM => return "ASTC_4x4_UNORM",
        .ASTC_4x4_SRGB => return "ASTC_4x4_SRGB",
        .ASTC_5x4_UNORM => return "ASTC_5x4_UNORM",
        .ASTC_5x4_SRGB => return "ASTC_5x4_SRGB",
        .ASTC_5x5_UNORM => return "ASTC_5x5_UNORM",
        .ASTC_5x5_SRGB => return "ASTC_5x5_SRGB",
        .ASTC_6x5_UNORM => return "ASTC_6x5_UNORM",
        .ASTC_6x5_SRGB => return "ASTC_6x5_SRGB",
        .ASTC_6x6_UNORM => return "ASTC_6x6_UNORM",
        .ASTC_6x6_SRGB => return "ASTC_6x6_SRGB",
        .ASTC_8x5_UNORM => return "ASTC_8x5_UNORM",
        .ASTC_8x5_SRGB => return "ASTC_8x5_SRGB",
        .ASTC_8x8_UNORM => return "ASTC_8x8_UNORM",
        .ASTC_8x8_SRGB => return "ASTC_8x8_SRGB",
        .ASTC_10x5_UNORM => return "ASTC_10x5_UNORM",
        .ASTC_10x5_SRGB => return "ASTC_10x5_SRGB",
        .ASTC_10x6_UNORM => return "ASTC_10x6_UNORM",
        .ASTC_10x6_SRGB => return "ASTC_10x6_SRGB",
        .ASTC_10x8_UNORM => return "ASTC_10x8_UNORM",
        .ASTC_10x8_SRGB => return "ASTC_10x8_SRGB",
        .ASTC_10x10_UNORM => return "ASTC_10x10_UNORM",
        .ASTC_10x10_SRGB => return "ASTC_10x10_SRGB",
        .ASTC_12x10_UNORM => return "ASTC_12x10_UNORM",
        .ASTC_12x10_SRGB => return "ASTC_12x10_SRGB",
        .ASTC_12x12_UNORM => return "ASTC_12x12_UNORM",
        .ASTC_12x12_SRGB => return "ASTC_12x12_SRGB",
        .CLUT_P4 => return "CLUT_P4",
        .CLUT_P4A4 => return "CLUT_P4A4",
        .CLUT_P8 => return "CLUT_P8",
        .CLUT_P8A8 => return "CLUT_P8A8",
        else => return ".UNDEFINED",
    }
}

